@model online_event_booking_system.Models.View_Models.OrganizerDashboardViewModel
@{
    ViewData["Title"] = "Organizer Dashboard";
    Layout = "_DashboardLayout";
}

<!-- Organizer Dashboard Container -->
<div class="min-h-screen bg-dark-navy text-white pt-20">
    <!-- Main Content -->
    <div class="p-4 md:p-6 pt-8">
            <!-- Page Intro -->
            <div class="mb-8">
                <h1 class="text-3xl font-bold bg-gradient-to-r from-purple-400 to-teal-400 text-transparent bg-clip-text mb-2">Organizer Dashboard</h1>
                <p class="text-gray-400">Monitor sales, manage events, and optimize performance</p>
            </div>

            <!-- Filters -->
            <section aria-label="Filters" class="mb-8">
                <div class="flex flex-col md:flex-row items-center justify-between space-y-4 md:space-y-0 md:space-x-4">
                    <div class="flex items-center space-x-4 w-full md:w-auto">
                        <select aria-label="Event filter" class="px-4 py-3 bg-dark-navy border border-white/20 rounded-2xl text-white focus:outline-none focus-visible:ring-2 focus-visible:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm w-full md:w-56 cursor-pointer">
                            <option class="bg-dark-navy text-foreground">All Events</option>
                            <option class="bg-dark-navy text-foreground">Live Events</option>
                            <option class="bg-dark-navy text-foreground">Drafts</option>
                            <option class="bg-dark-navy text-foreground">Past Events</option>
                        </select>
                        <select aria-label="Date range" class="px-4 py-3 bg-dark-navy border border-white/20 rounded-2xl text-white focus:outline-none focus-visible:ring-2 focus-visible:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm w-full md:w-48 cursor-pointer">
                            <option class="bg-dark-navy text-foreground">This Week</option>
                            <option class="bg-dark-navy text-foreground">This Month</option>
                        </select>
                        <select aria-label="Venue filter" class="px-4 py-3 bg-dark-navy border border-white/20 rounded-2xl text-white focus:outline-none focus-visible:ring-2 focus-visible:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm w-full md:w-48 cursor-pointer">
                            <option class="bg-dark-navy text-foreground">All Venues</option>
                            <option class="bg-dark-navy text-foreground">Concert Hall</option>
                            <option class="bg-dark-navy text-foreground">Expo Center</option>
                            <option class="bg-dark-navy text-foreground">Open Arena</option>
                        </select>
                    </div>
                    <a asp-controller="Organizer" asp-action="CreateEvent" class="bg-gradient-to-r from-purple-500 to-teal-500 text-white px-6 py-3 rounded-2xl font-bold hover:from-purple-600 hover:to-teal-600 transition-all transform hover:scale-105 shadow-lg min-h-[44px]">Create Event</a>
                </div>
            </section>

            <!-- KPI Cards -->
            <section aria-label="KPIs" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 md:gap-6 mb-8">
                <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6 hover:bg-dark-navy transition">
                    <p class="text-gray-400 text-sm">Total Revenue</p>
                    <p class="text-3xl font-bold mt-2">LKR @(Model.TotalRevenue.ToString("N0"))</p>
                    <p class="text-green-400 text-sm mt-1">All time revenue</p>
                </div>
                <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6 hover:bg-dark-navy transition">
                    <p class="text-gray-400 text-sm">Total Bookings</p>
                    <p class="text-3xl font-bold mt-2">@Model.TotalBookings</p>
                    <p class="text-blue-400 text-sm mt-1">All time bookings</p>
                </div>
                <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6 hover:bg-dark-navy transition">
                    <p class="text-gray-400 text-sm">Published Events</p>
                    <p class="text-3xl font-bold mt-2">@Model.PublishedEvents</p>
                    <p class="text-purple-400 text-sm mt-1">Currently live</p>
                </div>
                <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6 hover:bg-dark-navy transition hidden xl:block">
                    <p class="text-gray-400 text-sm">Total Events</p>
                    <p class="text-3xl font-bold mt-2">@Model.TotalEvents</p>
                    <p class="text-teal-400 text-sm mt-1">All time events</p>
                </div>
            </section>

            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                <!-- Sales Trend -->
                <section aria-label="Sales Trend" class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6">
                    <div class="flex items-center justify-between mb-6">
                        <h2 class="text-xl font-bold">Sales Trend</h2>
                        <div class="flex space-x-2" role="tablist" aria-label="Sales range tabs">
                            <button onclick="updateSalesTrend('7d')" role="tab" aria-selected="true" class="px-4 py-2 bg-gradient-to-r from-purple-500 to-teal-500 text-white rounded-xl text-sm font-semibold focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-purple-500/60">7D</button>
                            <button onclick="updateSalesTrend('30d')" role="tab" aria-selected="false" class="px-4 py-2 bg-dark-navy text-gray-300 rounded-xl text-sm font-semibold hover:bg-white/20 transition focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-purple-500/60">30D</button>
                        </div>
                    </div>
                    <div class="h-64 relative">
                        <div id="salesTrendLoading" class="absolute inset-0 flex items-center justify-center">
                            <div class="text-center">
                                <div class="animate-spin w-8 h-8 border-2 border-purple-500 border-t-transparent rounded-full mx-auto mb-2"></div>
                                <p class="text-gray-400 text-sm">Loading chart...</p>
                            </div>
                        </div>
                        <canvas id="salesTrendChart" class="hidden"></canvas>
                    </div>
                </section>

                <!-- Quick Actions -->
                <section aria-label="Quick Actions" class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6">
                    <h2 class="text-xl font-bold mb-4">Quick Actions</h2>
                    <div class="grid grid-cols-1 sm:grid-cols-2 gap-3">
                        <a asp-controller="Organizer" asp-action="CreateEvent" class="bg-gradient-to-r from-purple-500 to-teal-500 text-white px-4 py-3 rounded-xl font-bold text-sm hover:from-purple-600 hover:to-teal-600 transition transform hover:scale-105 text-center">Create Event</a>
                        <a asp-controller="Organizer" asp-action="Discounts" class="px-4 py-3 rounded-xl text-sm font-semibold text-purple-400 border border-purple-400/50 hover:bg-dark-navy transition text-center">Manage Discounts</a>
                        <form asp-controller="Organizer" asp-action="SendDailySummary" method="post" class="contents">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="px-4 py-3 rounded-xl text-sm font-semibold text-blue-400 border border-blue-400/50 hover:bg-dark-navy transition text-center w-full">Send Daily Summary Email</button>
                        </form>
                        <a href="#" class="px-4 py-3 rounded-xl text-sm font-semibold text-teal-400 border border-teal-400/50 hover:bg-dark-navy transition text-center">Export Attendees (CSV)</a>
                        <a href="#" class="px-4 py-3 rounded-xl text-sm font-semibold text-blue-400 border border-blue-400/50 hover:bg-dark-navy transition text-center">Download QR Set (ZIP)</a>
                    </div>
                </section>
            </div>

            <!-- My Events Table (Recent Events) -->
            <section aria-label="My Events" class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6 mt-8">
                <div class="flex items-center justify-between mb-6">
                    <h2 class="text-xl font-bold">My Recent Events</h2>
                    <a asp-controller="Organizer" asp-action="Events" class="text-purple-400 hover:text-purple-300 text-sm font-medium">View All</a>
                </div>
                <div class="overflow-x-auto">
                    <table class="w-full" role="table">
                        <thead>
                            <tr class="border-b border-white/10">
                                <th class="text-left py-3 text-gray-400 font-medium">Event</th>
                                <th class="text-left py-3 text-gray-400 font-medium">Date</th>
                                <th class="text-left py-3 text-gray-400 font-medium">Venue</th>
                                <th class="text-left py-3 text-gray-400 font-medium">Status</th>
                                <th class="text-left py-3 text-gray-400 font-medium">Tickets</th>
                                <th class="text-left py-3 text-gray-400 font-medium">Revenue</th>
                                <th class="text-left py-3 text-gray-400 font-medium">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.RecentEvents != null && Model.RecentEvents.Any())
                            {
                                foreach (var e in Model.RecentEvents)
                                {
                                    var tickets = e.Bookings?.Sum(b => b.Tickets?.Count ?? 0) ?? 0;
                                    var revenue = e.Bookings?.SelectMany(b => b.Tickets ?? new List<online_event_booking_system.Data.Entities.Ticket>())
                                        .Where(t => t.Payment != null)
                                        .Sum(t => t.Payment.Amount) ?? 0;
                                    var badge = e.Status == "Draft" ? "bg-yellow-500/20 text-yellow-400" : e.IsPublished ? "bg-green-500/20 text-green-400" : "bg-red-500/20 text-red-400";
                                    <tr class="border-b border-white/5 hover:bg-white/5 transition-all">
                                        <td class="py-3">
                                            <p class="text-white font-medium">@e.Title</p>
                                            <p class="text-gray-400 text-sm">Organizer: You</p>
                                        </td>
                                        <td class="py-3 text-gray-300">@e.EventDate.ToString("MMM dd, yyyy")</td>
                                        <td class="py-3 text-gray-300">@e.Venue?.Name</td>
                                        <td class="py-3"><span class="px-3 py-1 rounded-full text-xs font-medium @badge">@(e.IsPublished ? "Published" : e.Status)</span></td>
                                        <td class="py-3 text-gray-300">@tickets</td>
                                        <td class="py-3 text-gray-300">LKR @revenue.ToString("N0")</td>
                                        <td class="py-3">
                                            <div class="flex space-x-2">
                                                <a asp-controller="Events" asp-action="Details" asp-route-id="@e.Id" class="text-purple-400 hover:text-purple-300" aria-label="View">
                                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"/></svg>
                                                </a>
                                                <a asp-controller="Organizer" asp-action="EditEvent" asp-route-id="@e.Id" class="text-blue-400 hover:text-blue-300" aria-label="Edit">
                                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/></svg>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </section>

            <!-- Bottom Sections: Upcoming Check-in and Discounts -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mt-8">
                <!-- Upcoming Events Check-in -->
                <section aria-label="Upcoming Events Check-in" class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6">
                    <div class="flex items-center justify-between mb-6">
                        <h2 class="text-xl font-bold">Upcoming Events Check-in</h2>
                        <p class="text-gray-400 text-xs">System automatically generates QR-coded e-tickets.</p>
                    </div>
                    <div class="space-y-4">
                        @for (var i = 0; i < 4; i++)
                        {
                            <div class="p-4 bg-white/5 rounded-xl flex items-center justify-between">
                                <div class="flex items-center space-x-3">
                                    <span class="px-2.5 py-1 rounded-full text-xs bg-gradient-to-r from-purple-500/30 to-teal-500/30 text-white">Live</span>
                                    <div>
                                        <p class="text-white font-medium">Check-in Event @(i + 1)</p>
                                        <p class="text-gray-400 text-sm">Starts at @(5 + i):00 PM • Concert Hall</p>
                                    </div>
                                </div>
                                <a href="#" class="px-4 py-2 rounded-xl text-sm font-semibold text-teal-400 border border-teal-400/50 hover:bg-dark-navy transition">Open Check-in</a>
                            </div>
                        }
                    </div>
                </section>

                <!-- Discounts Overview -->
                <section aria-label="Discounts Overview" class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6">
                    <div class="flex items-center justify-between mb-6">
                        <h2 class="text-xl font-bold">Active Discounts</h2>
                        <a asp-controller="Organizer" asp-action="Discounts" class="bg-gradient-to-r from-purple-500 to-teal-500 text-white px-4 py-2 rounded-xl text-sm font-bold hover:from-purple-600 hover:to-teal-600 transition transform hover:scale-105">Create Discount</a>
                    </div>
                    <div class="space-y-4">
                        @if (Model.ActiveDiscounts != null && Model.ActiveDiscounts.Any())
                        {
                            foreach (var d in Model.ActiveDiscounts)
                            {
                                <div class="p-4 bg-white/5 rounded-xl border border-purple-500/20 flex items-center justify-between">
                                    <div>
                                        <p class="text-white font-semibold">@d.Code</p>
                                        <p class="text-gray-400 text-sm">Expires: @d.ValidTo.ToString("MMM dd, yyyy")</p>
                                    </div>
                                    <span class="px-3 py-1 bg-green-500/20 text-green-400 rounded-full text-xs font-medium">@(d.Type == "Percent" ? ($"{d.Value:0}% off") : ($"LKR {d.Value:0} off"))</span>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="text-gray-400">No active discounts.</div>
                        }
                    </div>
                </section>
            </div>
    </div>
</div>

<!-- Chart.js CDN with fallback -->
<script src="https://cdn.jsdelivr.net/npm/chart.js" onerror="loadChartFallback()"></script>
<script>
    function loadChartFallback() {
        console.warn('Chart.js CDN failed to load, trying alternative CDN...');
        const script = document.createElement('script');
        script.src = 'https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.4.0/chart.min.js';
        script.onerror = function() {
            console.error('All Chart.js CDNs failed to load');
            showNotification('Charts failed to load. Please check your internet connection.', 'error');
        };
        document.head.appendChild(script);
    }
</script>

<script>
    // Global chart variables
    let salesTrendChart;

    // Notification system
    function showNotification(message, type = 'info') {
        const notification = document.createElement('div');
        notification.className = `fixed top-4 right-4 z-50 px-6 py-4 rounded-xl shadow-lg backdrop-blur-xl border transition-all duration-300 transform translate-x-full ${
            type === 'success' ? 'bg-green-500/20 border-green-500/30 text-green-400' :
            type === 'error' ? 'bg-red-500/20 border-red-500/30 text-red-400' :
            'bg-blue-500/20 border-blue-500/30 text-blue-400'
        }`;
        notification.innerHTML = `
            <div class="flex items-center space-x-3">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <span>${message}</span>
            </div>
        `;
        document.body.appendChild(notification);
        
        // Animate in
        setTimeout(() => {
            notification.classList.remove('translate-x-full');
        }, 100);
        
        // Remove after 3 seconds
        setTimeout(() => {
            notification.classList.add('translate-x-full');
            setTimeout(() => {
                document.body.removeChild(notification);
            }, 300);
        }, 3000);
    }

    // Server-prepared initial data (faster first paint)
    // Use model-provided precomputed data to avoid API calls
    const initialSalesLabels = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.SalesLabels ?? new List<string>()));
    const initialSalesData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.SalesData ?? new List<decimal>()));
    const labels7d = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.SalesLabels7d ?? new List<string>()));
    const data7d = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.SalesData7d ?? new List<decimal>()));
    const labels30d = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.SalesLabels30d ?? new List<string>()));
    const data30d = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.SalesData30d ?? new List<decimal>()));

    // Chart initialization
    document.addEventListener('DOMContentLoaded', function() {
        // Wait for Chart.js to load, then initialize charts
        async function initializeCharts() {
            if (typeof Chart === 'undefined') {
                console.warn('Chart.js not loaded yet, retrying in 100ms...');
                setTimeout(initializeCharts, 100);
                return;
            }
            
            try {
                await initSalesTrendChart();
                console.log('Sales trend chart initialized successfully');
            } catch (error) {
                console.error('Error initializing sales trend chart:', error);
                showNotification('Error loading sales trend chart. Please refresh the page.', 'error');
            }
        }
        
        // Start initialization
        initializeCharts();
    });

    // Sales Trend Chart
    async function initSalesTrendChart() {
        const canvas = document.getElementById('salesTrendChart');
        if (!canvas) {
            console.error('Sales trend chart canvas not found');
            return;
        }
        
        const ctx = canvas.getContext('2d');
        if (!ctx) {
            console.error('Could not get 2D context for sales trend chart');
            return;
        }
        
        try {
            let labels = initialSalesLabels;
            let dataset = initialSalesData;

            // If server didn't provide data (or it's empty), fallback to 7d precomputed arrays
            if (!Array.isArray(labels) || labels.length === 0 || !Array.isArray(dataset) || dataset.length === 0) {
                labels = labels7d;
                dataset = data7d;
            }

            salesTrendChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Sales (LKR)',
                        data: dataset,
                        borderColor: 'rgb(168, 85, 247)',
                        backgroundColor: 'rgba(168, 85, 247, 0.1)',
                        borderWidth: 3,
                        fill: true,
                        tension: 0.4,
                        pointBackgroundColor: 'rgb(168, 85, 247)',
                        pointBorderColor: '#fff',
                        pointBorderWidth: 2,
                        pointRadius: 6,
                        pointHoverRadius: 8
                    }]
                },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    x: {
                        grid: {
                            color: 'rgba(255, 255, 255, 0.1)',
                            borderColor: 'rgba(255, 255, 255, 0.2)'
                        },
                        ticks: {
                            color: '#9CA3AF'
                        }
                    },
                    y: {
                        grid: {
                            color: 'rgba(255, 255, 255, 0.1)',
                            borderColor: 'rgba(255, 255, 255, 0.2)'
                        },
                        ticks: {
                            color: '#9CA3AF',
                            callback: function(value) {
                                return 'LKR ' + value.toLocaleString();
                            }
                        }
                    }
                },
                interaction: {
                    intersect: false,
                    mode: 'index'
                }
            }
        });
        
        // Hide loading indicator and show chart
        const loadingIndicator = document.getElementById('salesTrendLoading');
        const chartCanvas = document.getElementById('salesTrendChart');
        if (loadingIndicator && chartCanvas) {
            loadingIndicator.classList.add('hidden');
            chartCanvas.classList.remove('hidden');
        }
        } catch (error) {
            console.error('Error building sales chart:', error);
            showNotification('Error building sales chart', 'error');
        }
    }

    // Update Sales Trend Chart
    async function updateSalesTrend(period) {
        if (!salesTrendChart) {
            console.error('Sales trend chart not initialized');
            return;
        }
        
        // Update button states
        document.querySelectorAll('[onclick*="updateSalesTrend"]').forEach(btn => {
            btn.classList.remove('bg-gradient-to-r', 'from-purple-500', 'to-teal-500');
            btn.classList.add('bg-dark-navy', 'text-gray-300');
        });
        event.target.classList.remove('bg-dark-navy', 'text-gray-300');
        event.target.classList.add('bg-gradient-to-r', 'from-purple-500', 'to-teal-500');

        // Swap dataset locally using precomputed arrays
        if (period === '7d') {
            salesTrendChart.data.labels = labels7d;
            salesTrendChart.data.datasets[0].data = data7d;
        } else {
            salesTrendChart.data.labels = labels30d;
            salesTrendChart.data.datasets[0].data = data30d;
        }
        salesTrendChart.update();
    }
</script>

