@model online_event_booking_system.Models.View_Models.CreateEventViewModel
@{
    ViewData["Title"] = "Edit Event";
    Layout = "_DashboardLayout";
}

<!-- Organizer Edit Event Container -->
<div class="min-h-screen bg-dark-navy text-white pt-20">
    <!-- Main Content -->
    <div class="p-4 md:p-6 pt-8">
            <!-- Page Header -->
            <div class="mb-8">
                <div class="flex flex-col md:flex-row items-start md:items-center justify-between">
                    <div>
                        <h1 class="text-3xl font-bold bg-gradient-to-r from-purple-400 to-teal-400 text-transparent bg-clip-text mb-2">Edit Event</h1>
                        <p class="text-gray-400">Update your event details and settings</p>
                    </div>
                    <div class="mt-4 md:mt-0 flex space-x-3">
                        <button class="bg-white/10 border border-white/20 text-white px-4 py-2 rounded-xl hover:bg-white/20 transition-all duration-200">
                            View Event
                        </button>
                        <button class="bg-gradient-to-r from-purple-500 to-teal-500 text-white px-4 py-2 rounded-xl font-bold hover:from-purple-600 hover:to-teal-600 transition-all transform hover:scale-105 shadow-lg">
                            Save Changes
                        </button>
                    </div>
                </div>
            </div>

            <!-- Event Status Banner -->
            <section aria-label="Event Status" class="mb-8">
                @{
                    var eventEntity = ViewBag.EventEntity as online_event_booking_system.Data.Entities.Event;
                    var statusClass = eventEntity?.IsPublished == true ? "from-green-500/20 to-teal-500/20 border-green-500/30" : "from-yellow-500/20 to-orange-500/20 border-yellow-500/30";
                    var statusDotClass = eventEntity?.IsPublished == true ? "bg-green-400" : "bg-yellow-400";
                    var statusText = eventEntity?.IsPublished == true ? "Event is Live" : "Event is Draft";
                    var statusDescription = eventEntity?.IsPublished == true ? "This event is currently published and accepting ticket sales" : "This event is in draft mode and not yet published";
                }
                <div class="bg-gradient-to-r @statusClass border @statusClass.Split(' ')[1] rounded-2xl p-4">
                    <div class="flex items-center space-x-3">
                        <div class="w-3 h-3 @statusDotClass rounded-full @(eventEntity?.IsPublished == true ? "animate-pulse" : "")"></div>
                        <div>
                            <h3 class="text-white font-semibold">@statusText</h3>
                            <p class="text-gray-300 text-sm">@statusDescription</p>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Form Progress -->
            <section aria-label="Form Progress" class="mb-8">
                <div class="flex items-center justify-between">
                    <div class="flex items-center space-x-4">
                        <div class="flex items-center space-x-2">
                            <div class="w-8 h-8 bg-gradient-to-r from-purple-500 to-teal-500 rounded-full flex items-center justify-center">
                                <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                                </svg>
                            </div>
                            <span class="text-white font-semibold">Basic Info</span>
                        </div>
                        <div class="w-16 h-1 bg-gradient-to-r from-purple-500 to-teal-500 rounded-full"></div>
                        <div class="flex items-center space-x-2">
                            <div class="w-8 h-8 bg-gradient-to-r from-purple-500 to-teal-500 rounded-full flex items-center justify-center">
                                <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                                </svg>
                            </div>
                            <span class="text-white font-semibold">Details</span>
                        </div>
                        <div class="w-16 h-1 bg-gradient-to-r from-purple-500 to-teal-500 rounded-full"></div>
                        <div class="flex items-center space-x-2">
                            <div class="w-8 h-8 bg-gradient-to-r from-purple-500 to-teal-500 rounded-full flex items-center justify-center">
                                <span class="text-white text-sm font-bold">3</span>
                            </div>
                            <span class="text-white font-semibold">Tickets</span>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Event Edit Form -->
            <form asp-action="EditEvent" asp-route-id="@ViewContext.RouteData.Values["id"]" method="post" enctype="multipart/form-data" class="space-y-8">
                @Html.AntiForgeryToken()
                <!-- Basic Information -->
                <section aria-label="Basic Information" class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6">
                    <h2 class="text-xl font-bold mb-6">Basic Information</h2>
                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                        <div class="space-y-6">
                            <div>
                                <label asp-for="Title" class="block text-sm font-medium text-gray-300 mb-2">Event Title *</label>
                                <input asp-for="Title" type="text" class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm" placeholder="Enter your event title">
                                <span asp-validation-for="Title" class="text-red-400 text-sm"></span>
                            </div>
                            
                            <div>
                                <label asp-for="CategoryId" class="block text-sm font-medium text-gray-300 mb-2">Event Category *</label>
                                <select asp-for="CategoryId" asp-items="@(new SelectList(Model.Categories, "Id", "Name"))" class="w-full px-4 py-3 bg-dark-navy border border-white/20 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm cursor-pointer">
                                    <option value="" class="bg-dark-navy text-foreground">Select a category</option>
                                </select>
                                <span asp-validation-for="CategoryId" class="text-red-400 text-sm"></span>
                            </div>
                            
                            <div>
                                <label class="block text-sm font-medium text-gray-300 mb-2">Event Type</label>
                                <div class="grid grid-cols-2 gap-3">
                                    <label class="flex items-center space-x-3 p-3 bg-white/5 border border-white/20 rounded-xl cursor-pointer hover:bg-white/10 transition-all">
                                        <input type="radio" name="eventType" value="online" class="text-purple-500 focus:ring-purple-500">
                                        <span class="text-white">Online</span>
                                    </label>
                                    <label class="flex items-center space-x-3 p-3 bg-white/5 border border-white/20 rounded-xl cursor-pointer hover:bg-white/10 transition-all">
                                        <input type="radio" name="eventType" value="in-person" class="text-purple-500 focus:ring-purple-500" checked>
                                        <span class="text-white">In-Person</span>
                                    </label>
                                </div>
                            </div>
                            
                            <div>
                                <label asp-for="VenueId" class="block text-sm font-medium text-gray-300 mb-2">Venue *</label>
                                <select asp-for="VenueId" asp-items="@(new SelectList(Model.Venues, "Id", "Name"))" class="w-full px-4 py-3 bg-dark-navy border border-white/20 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm cursor-pointer">
                                    <option value="" class="bg-dark-navy text-foreground">Select a venue</option>
                                </select>
                                <span asp-validation-for="VenueId" class="text-red-400 text-sm"></span>
                            </div>
                        </div>
                        
                        <div class="space-y-6">
                            <div>
                                <label asp-for="Description" class="block text-sm font-medium text-gray-300 mb-2">Event Description *</label>
                                <textarea asp-for="Description" rows="6" class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm resize-none" placeholder="Describe your event in detail..."></textarea>
                                <span asp-validation-for="Description" class="text-red-400 text-sm"></span>
                            </div>
                            
                            <div>
                                <label asp-for="ImageFile" class="block text-sm font-medium text-gray-300 mb-2">Event Image</label>
                                <div class="relative">
                                    @if (!string.IsNullOrEmpty(Model.ImageUrl))
                                    {
                                        <img src="@Model.ImageUrl" alt="Event image" class="w-full h-48 object-cover rounded-xl mb-4">
                                    }
                                    else
                                    {
                                    <img src="~/images/placeholder.svg" alt="Event image" class="w-full h-48 object-cover rounded-xl mb-4">
                                    }
                                </div>
                                <input asp-for="ImageFile" type="file" accept="image/*" class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm">
                                <span asp-validation-for="ImageFile" class="text-red-400 text-sm"></span>
                                <input asp-for="ImageUrl" type="hidden" />
                            </div>
                        </div>
                    </div>
                </section>

                <!-- Date & Time -->
                <section aria-label="Date & Time" class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6">
                    <h2 class="text-xl font-bold mb-6">Date & Time</h2>
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                        <div>
                            <label asp-for="EventDate" class="block text-sm font-medium text-gray-300 mb-2">Start Date *</label>
                            <input asp-for="EventDate" type="date" class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm">
                            <span asp-validation-for="EventDate" class="text-red-400 text-sm"></span>
                        </div>
                        
                        <div>
                            <label asp-for="StartTime" class="block text-sm font-medium text-gray-300 mb-2">Start Time *</label>
                            <input asp-for="StartTime" type="time" class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm">
                            <span asp-validation-for="StartTime" class="text-red-400 text-sm"></span>
                        </div>
                        
                        <div>
                            <label asp-for="EndTime" class="block text-sm font-medium text-gray-300 mb-2">End Time *</label>
                            <input asp-for="EndTime" type="time" class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm">
                            <span asp-validation-for="EndTime" class="text-red-400 text-sm"></span>
                        </div>
                    </div>
                    
                    <div class="mt-6">
                        <label class="flex items-center space-x-3">
                            <input asp-for="IsMultiDay" type="checkbox" class="text-purple-500 focus:ring-purple-500 rounded">
                            <span class="text-gray-300">This is a multi-day event</span>
                        </label>
                    </div>
                </section>

                <!-- Ticket Information -->
                <section aria-label="Ticket Information" class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6">
                    <h2 class="text-xl font-bold mb-6">Ticket Information</h2>
                    <div class="space-y-6">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <label asp-for="TotalCapacity" class="block text-sm font-medium text-gray-300 mb-2">Total Capacity *</label>
                                <input asp-for="TotalCapacity" type="number" min="1" class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm" placeholder="Maximum attendees">
                                <span asp-validation-for="TotalCapacity" class="text-red-400 text-sm"></span>
                            </div>
                            
                            <div>
                                <label asp-for="TicketSalesStart" class="block text-sm font-medium text-gray-300 mb-2">Ticket Sales Start</label>
                                <input asp-for="TicketSalesStart" type="datetime-local" class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm">
                                <span asp-validation-for="TicketSalesStart" class="text-red-400 text-sm"></span>
                            </div>
                        </div>
                        
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <label asp-for="TicketSalesEnd" class="block text-sm font-medium text-gray-300 mb-2">Ticket Sales End</label>
                                <input asp-for="TicketSalesEnd" type="datetime-local" class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm">
                                <span asp-validation-for="TicketSalesEnd" class="text-red-400 text-sm"></span>
                            </div>
                            
                            <div>
                                <label asp-for="RefundPolicy" class="block text-sm font-medium text-gray-300 mb-2">Refund Policy</label>
                                <select asp-for="RefundPolicy" class="w-full px-4 py-3 bg-dark-navy border border-white/20 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm cursor-pointer">
                                    <option value="No Refunds" class="bg-dark-navy text-foreground">No Refunds</option>
                                    <option value="Full Refund (7 days before)" class="bg-dark-navy text-foreground">Full Refund (7 days before)</option>
                                    <option value="Full Refund (24 hours before)" class="bg-dark-navy text-foreground">Full Refund (24 hours before)</option>
                                    <option value="Partial Refund" class="bg-dark-navy text-foreground">Partial Refund</option>
                                </select>
                                <span asp-validation-for="RefundPolicy" class="text-red-400 text-sm"></span>
                            </div>
                        </div>
                    </div>
                </section>

                <!-- Ticket Types -->
                <section aria-label="Ticket Types" class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6">
                    <div class="flex items-center justify-between mb-6">
                        <h2 class="text-xl font-bold">Ticket Types</h2>
                        <button type="button" id="add-ticket-type" class="bg-gradient-to-r from-purple-500 to-teal-500 text-white px-4 py-2 rounded-xl font-semibold hover:from-purple-600 hover:to-teal-600 transition-all transform hover:scale-105">
                            Add Ticket Type
                        </button>
                    </div>
                    
                    <div class="space-y-4" id="ticket-prices-container">
                        @if (Model?.EventPrices != null && Model.EventPrices.Count > 0)
                        {
                            @for (int i = 0; i < Model.EventPrices.Count; i++)
                            {
                                <div class="bg-white/5 border border-white/10 rounded-xl p-4 ticket-price-item">
                                    <div class="grid grid-cols-1 md:grid-cols-5 gap-4">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-300 mb-2">Name</label>
                                            <input asp-for="EventPrices[i].Category" type="text" class="w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm">
                                            <span asp-validation-for="EventPrices[i].Category" class="text-red-400 text-sm"></span>
                                    </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-300 mb-2">Price</label>
                                        <input asp-for="EventPrices[i].Price" type="number" min="0" step="0.01" class="w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm">
                                        <span asp-validation-for="EventPrices[i].Price" class="text-red-400 text-sm"></span>
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-300 mb-2">Quantity</label>
                                        <input asp-for="EventPrices[i].Stock" type="number" min="1" class="w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm">
                                        <span asp-validation-for="EventPrices[i].Stock" class="text-red-400 text-sm"></span>
                                </div>
                                <div>
                                        <label class="block text-sm font-medium text-gray-300 mb-2">Type</label>
                                        <select asp-for="EventPrices[i].PriceType" class="w-full px-3 py-2 bg-dark-navy border border-white/20 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm cursor-pointer">
                                            <option value="Standard" class="bg-dark-navy text-foreground">Standard</option>
                                            <option value="Early Bird" class="bg-dark-navy text-foreground">Early Bird</option>
                                            <option value="VIP" class="bg-dark-navy text-foreground">VIP</option>
                                            <option value="Group" class="bg-dark-navy text-foreground">Group</option>
                                            <option value="Student" class="bg-dark-navy text-foreground">Student</option>
                                        </select>
                                </div>
                                <div class="flex items-end">
                                        <button type="button" class="w-full bg-red-500/20 text-red-400 px-3 py-2 rounded-lg hover:bg-red-500/30 transition-all remove-ticket-price">
                                        Remove
                                    </button>
                                </div>
                            </div>
                                <div class="mt-3">
                                    <label class="block text-sm font-medium text-gray-300 mb-2">Description</label>
                                    <textarea asp-for="EventPrices[i].Description" rows="2" class="w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm resize-none" placeholder="Optional description..."></textarea>
                                </div>
                                <input asp-for="EventPrices[i].IsActive" type="hidden" value="true" />
                        </div>
                            }
                        }
                        
                        <!-- Add New Ticket Type Button -->
                        <div id="add-ticket-type-placeholder" class="border-2 border-dashed border-white/20 rounded-xl p-6 text-center hover:border-purple-500/50 transition-all cursor-pointer">
                            <svg class="w-8 h-8 text-gray-400 mx-auto mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                            </svg>
                            <p class="text-gray-400">Add another ticket type</p>
                        </div>
                    </div>
                </section>

                <!-- Event Analytics -->
                <section aria-label="Event Analytics" class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6">
                    <h2 class="text-xl font-bold mb-6">Event Performance</h2>
                    <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
                        <div class="text-center">
                            <p class="text-3xl font-bold text-green-400">@ViewBag.TotalTicketsSold</p>
                            <p class="text-gray-400 text-sm">Tickets Sold</p>
                        </div>
                        <div class="text-center">
                            <p class="text-3xl font-bold text-blue-400">LKR @ViewBag.TotalRevenue.ToString("N2")</p>
                            <p class="text-gray-400 text-sm">Revenue</p>
                        </div>
                        <div class="text-center">
                            <p class="text-3xl font-bold text-purple-400">@ViewBag.CapacityUsedPercentage.ToString("F1")%</p>
                            <p class="text-gray-400 text-sm">Capacity Used</p>
                        </div>
                        <div class="text-center">
                            <p class="text-3xl font-bold text-teal-400">@ViewBag.RemainingTickets</p>
                            <p class="text-gray-400 text-sm">Remaining</p>
                        </div>
                    </div>
                </section>

                <!-- Additional Settings -->
                <section aria-label="Additional Settings" class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6">
                    <h2 class="text-xl font-bold mb-6">Additional Settings</h2>
                    <div class="space-y-6">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <label asp-for="Tags" class="block text-sm font-medium text-gray-300 mb-2">Event Tags</label>
                                <input asp-for="Tags" type="text" class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm" placeholder="music, festival, outdoor (comma separated)">
                                <span asp-validation-for="Tags" class="text-red-400 text-sm"></span>
                            </div>
                            
                            <div>
                                <label asp-for="AgeRestriction" class="block text-sm font-medium text-gray-300 mb-2">Age Restriction</label>
                                <select asp-for="AgeRestriction" class="w-full px-4 py-3 bg-dark-navy border border-white/20 rounded-xl text-white focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm cursor-pointer">
                                    <option value="All Ages" class="bg-dark-navy text-foreground">All Ages</option>
                                    <option value="18+" class="bg-dark-navy text-foreground">18+ Only</option>
                                    <option value="21+" class="bg-dark-navy text-foreground">21+ Only</option>
                                    <option value="Family Friendly" class="bg-dark-navy text-foreground">Family Friendly</option>
                                </select>
                                <span asp-validation-for="AgeRestriction" class="text-red-400 text-sm"></span>
                            </div>
                        </div>
                        
                        <div class="space-y-4">
                            <h3 class="text-lg font-semibold">Event Features</h3>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <label class="flex items-center space-x-3 p-3 bg-white/5 border border-white/20 rounded-xl cursor-pointer hover:bg-white/10 transition-all">
                                    <input type="checkbox" class="text-purple-500 focus:ring-purple-500 rounded" checked>
                                    <span class="text-white">Allow waitlist when sold out</span>
                                </label>
                                <label class="flex items-center space-x-3 p-3 bg-white/5 border border-white/20 rounded-xl cursor-pointer hover:bg-white/10 transition-all">
                                    <input type="checkbox" class="text-purple-500 focus:ring-purple-500 rounded" checked>
                                    <span class="text-white">Require attendee information</span>
                                </label>
                                <label class="flex items-center space-x-3 p-3 bg-white/5 border border-white/20 rounded-xl cursor-pointer hover:bg-white/10 transition-all">
                                    <input type="checkbox" class="text-purple-500 focus:ring-purple-500 rounded" checked>
                                    <span class="text-white">Send confirmation emails</span>
                                </label>
                                <label class="flex items-center space-x-3 p-3 bg-white/5 border border-white/20 rounded-xl cursor-pointer hover:bg-white/10 transition-all">
                                    <input type="checkbox" class="text-purple-500 focus:ring-purple-500 rounded" checked>
                                    <span class="text-white">Enable social sharing</span>
                                </label>
                            </div>
                        </div>
                    </div>
                </section>

                <!-- Form Actions -->
                <section aria-label="Form Actions" class="flex flex-col sm:flex-row items-center justify-between space-y-4 sm:space-y-0 sm:space-x-4">
                    <a asp-action="Events" class="w-full sm:w-auto bg-white/10 border border-white/20 text-white px-6 py-3 rounded-xl hover:bg-white/20 transition-all duration-200 text-center">
                        Cancel
                    </a>
                    <div class="flex space-x-4 w-full sm:w-auto">
                        <button type="button" id="draftBtn" class="flex-1 sm:flex-none bg-white/10 border border-white/20 text-white px-6 py-3 rounded-xl hover:bg-white/20 transition-all duration-200">
                            <span class="draft-text">Save as Draft</span>
                            <span class="draft-loading hidden">
                                <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                </svg>
                                Saving...
                            </span>
                        </button>
                        <button type="submit" id="submitBtn" class="flex-1 sm:flex-none bg-gradient-to-r from-purple-500 to-teal-500 text-white px-6 py-3 rounded-xl font-bold hover:from-purple-600 hover:to-teal-600 transition-all transform hover:scale-105 shadow-lg">
                            <span class="submit-text">Update Event</span>
                            <span class="submit-loading hidden">
                                <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                                </svg>
                                Updating...
                            </span>
                        </button>
                    </div>
                </section>
            </form>
    </div>
</div>


@section Scripts {
    <script>
        // Form submission tracking
        let isSubmitting = false;
        
        let ticketPriceIndex = @(Model?.EventPrices?.Count ?? 0);

        // Add ticket type functionality
        document.getElementById('add-ticket-type').addEventListener('click', function() {
            addTicketPrice();
        });

        document.getElementById('add-ticket-type-placeholder').addEventListener('click', function() {
            addTicketPrice();
        });

        function addTicketPrice() {
            const container = document.getElementById('ticket-prices-container');
            const placeholder = document.getElementById('add-ticket-type-placeholder');
            
            const ticketPriceHtml = `
                <div class="bg-white/5 border border-white/10 rounded-xl p-4 ticket-price-item">
                    <div class="grid grid-cols-1 md:grid-cols-5 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-300 mb-2">Name</label>
                            <input name="EventPrices[${ticketPriceIndex}].Category" type="text" class="w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm">
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-300 mb-2">Price</label>
                            <input name="EventPrices[${ticketPriceIndex}].Price" type="number" min="0" step="0.01" class="w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm">
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-300 mb-2">Quantity</label>
                            <input name="EventPrices[${ticketPriceIndex}].Stock" type="number" min="1" class="w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm">
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-300 mb-2">Type</label>
                            <select name="EventPrices[${ticketPriceIndex}].PriceType" class="w-full px-3 py-2 bg-dark-navy border border-white/20 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm cursor-pointer">
                                <option value="Standard" class="bg-dark-navy text-foreground">Standard</option>
                                <option value="Early Bird" class="bg-dark-navy text-foreground">Early Bird</option>
                                <option value="VIP" class="bg-dark-navy text-foreground">VIP</option>
                                <option value="Group" class="bg-dark-navy text-foreground">Group</option>
                                <option value="Student" class="bg-dark-navy text-foreground">Student</option>
                            </select>
                        </div>
                        <div class="flex items-end">
                            <button type="button" class="w-full bg-red-500/20 text-red-400 px-3 py-2 rounded-lg hover:bg-red-500/30 transition-all remove-ticket-price">
                                Remove
                            </button>
                        </div>
                    </div>
                    <div class="mt-3">
                        <label class="block text-sm font-medium text-gray-300 mb-2">Description</label>
                        <textarea name="EventPrices[${ticketPriceIndex}].Description" rows="2" class="w-full px-3 py-2 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500/50 focus:border-purple-500 backdrop-blur-sm resize-none" placeholder="Optional description..."></textarea>
                    </div>
                    <input name="EventPrices[${ticketPriceIndex}].IsActive" type="hidden" value="true" />
                </div>
            `;
            
            container.insertBefore(createElementFromHTML(ticketPriceHtml), placeholder);
            ticketPriceIndex++;
            
            // Add event listener to the new remove button
            const removeButtons = container.querySelectorAll('.remove-ticket-price');
            removeButtons[removeButtons.length - 1].addEventListener('click', function() {
                this.closest('.ticket-price-item').remove();
            });
        }

        // Remove ticket price functionality
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('remove-ticket-price')) {
                e.target.closest('.ticket-price-item').remove();
            }
        });

        // Helper function to create element from HTML string
        function createElementFromHTML(htmlString) {
            const div = document.createElement('div');
            div.innerHTML = htmlString.trim();
            return div.firstChild;
        }

        // Form submission handlers
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('form');
            const submitBtn = document.getElementById('submitBtn');
            const draftBtn = document.getElementById('draftBtn');

            if (form && submitBtn) {
                // Handle form submission
                form.addEventListener('submit', function(e) {
                    if (isSubmitting) {
                        e.preventDefault();
                        return false;
                    }
                    
                    if (validateForm()) {
                        setLoadingState(submitBtn, true);
                        isSubmitting = true;
                    } else {
                        e.preventDefault();
                        return false;
                    }
                });
            }

            if (draftBtn) {
                // Handle draft button
                draftBtn.addEventListener('click', function(e) {
                    if (isSubmitting) {
                        e.preventDefault();
                        return false;
                    }
                    
                    setLoadingState(draftBtn, true);
                    isSubmitting = true;
                    
                    // Add hidden field to indicate draft
                    const draftInput = document.createElement('input');
                    draftInput.type = 'hidden';
                    draftInput.name = 'IsDraft';
                    draftInput.value = 'true';
                    form.appendChild(draftInput);
                    
                    // Submit form
                    form.submit();
                });
            }
        });

        // Set loading state for buttons
        function setLoadingState(button, isLoading) {
            const textSpan = button.querySelector('.submit-text, .draft-text');
            const loadingSpan = button.querySelector('.submit-loading, .draft-loading');
            
            if (isLoading) {
                button.disabled = true;
                button.classList.add('opacity-50', 'cursor-not-allowed');
                if (textSpan) textSpan.classList.add('hidden');
                if (loadingSpan) loadingSpan.classList.remove('hidden');
            } else {
                button.disabled = false;
                button.classList.remove('opacity-50', 'cursor-not-allowed');
                if (textSpan) textSpan.classList.remove('hidden');
                if (loadingSpan) loadingSpan.classList.add('hidden');
            }
        }

        // Form validation
        function validateForm() {
            const requiredFields = [
                'Title',
                'Description', 
                'CategoryId',
                'VenueId',
                'EventDate',
                'StartTime',
                'EndTime',
                'TotalCapacity'
            ];

            let isValid = true;
            const errors = [];

            // Check required fields
            requiredFields.forEach(fieldName => {
                const field = document.querySelector(`[name="${fieldName}"]`);
                if (!field || !field.value.trim()) {
                    isValid = false;
                    errors.push(`${fieldName} is required`);
                }
            });

            // Check if at least one ticket type is added
            const ticketTypes = document.querySelectorAll('.ticket-price-item');
            if (ticketTypes.length === 0) {
                isValid = false;
                errors.push('At least one ticket type is required');
            }

            // Check ticket type validation
            ticketTypes.forEach((ticketType, index) => {
                const category = ticketType.querySelector(`[name="EventPrices[${index}].Category"]`);
                const price = ticketType.querySelector(`[name="EventPrices[${index}].Price"]`);
                const stock = ticketType.querySelector(`[name="EventPrices[${index}].Stock"]`);

                if (!category || !category.value.trim()) {
                    isValid = false;
                    errors.push(`Ticket type ${index + 1}: Category is required`);
                }
                if (!price || !price.value || parseFloat(price.value) < 0) {
                    isValid = false;
                    errors.push(`Ticket type ${index + 1}: Valid price is required`);
                }
                if (!stock || !stock.value || parseInt(stock.value) < 1) {
                    isValid = false;
                    errors.push(`Ticket type ${index + 1}: Stock must be at least 1`);
                }
            });

            if (!isValid) {
                alert('Please fix the following errors: ' + errors.join(', '));
            }

            return isValid;
        }
    </script>
}
