@using online_event_booking_system.Data.Entities
@model IEnumerable<ApplicationUser>
@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "_DashboardLayout";
}

<!-- Admin Dashboard Container -->
<div class="min-h-screen bg-dark-navy text-white pt-20">
        <!-- Main Content -->
    <div class="p-4 md:p-6">
            <!-- Success Message -->
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="mb-6 bg-green-500/20 border border-green-500/30 rounded-2xl p-4">
                    <div class="flex items-center space-x-3">
                        <svg class="w-5 h-5 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        <span class="text-green-400 font-medium">@TempData["SuccessMessage"]</span>
                    </div>
                </div>
            }

            <!-- Dashboard Header -->
            <div class="mb-8">
                <h1 class="text-3xl font-bold bg-gradient-to-r from-purple-400 to-teal-400 text-transparent bg-clip-text mb-2">Admin Dashboard</h1>
                <p class="text-gray-400">Manage your event platform and monitor system performance</p>
            </div>
            <!-- Quick Stats -->
            <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6 mb-8">
                <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6 hover:bg-white/10 transition-all">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-gray-400 text-sm">Total Users</p>
                            <p class="text-3xl font-bold text-white mt-2">@(Model?.Count() ?? 0)</p>
                            <p class="text-green-400 text-sm mt-1">+12% from last month</p>
                        </div>
                        <div class="w-12 h-12 bg-gradient-to-r from-purple-500 to-teal-500 rounded-xl flex items-center justify-center">
                            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path>
                            </svg>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6 hover:bg-white/10 transition-all">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-gray-400 text-sm">Active Users</p>
                            <p class="text-3xl font-bold text-white mt-2">@(Model?.Count(u => u.IsActive) ?? 0)</p>
                        <p class="text-green-400 text-sm mt-1">@(Model?.Count() > 0 ? Math.Round((double)(Model?.Count(u => u.IsActive) ?? 0) / (Model?.Count() ?? 1) * 100, 1) : 0)% of total</p>
                        </div>
                        <div class="w-12 h-12 bg-gradient-to-r from-green-500 to-emerald-500 rounded-xl flex items-center justify-center">
                            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6 hover:bg-white/10 transition-all">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-gray-400 text-sm">Recent Logins</p>
                        <p class="text-3xl font-bold text-white mt-2">@(Model?.Count(u => u.LastLogin.HasValue && u.LastLogin.Value > DateTime.Now.AddDays(-7)) ?? 0)</p>
                            <p class="text-blue-400 text-sm mt-1">Last 7 days</p>
                        </div>
                        <div class="w-12 h-12 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-xl flex items-center justify-center">
                            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                        </div>
                    </div>
                </div>

                <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6 hover:bg-white/10 transition-all">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-gray-400 text-sm">System Health</p>
                            <p class="text-3xl font-bold text-green-400 mt-2">98.5%</p>
                            <p class="text-green-400 text-sm mt-1">All systems operational</p>
                        </div>
                        <div class="w-12 h-12 bg-gradient-to-r from-orange-500 to-red-500 rounded-xl flex items-center justify-center">
                            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                            </svg>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Charts Section -->
            <div class="grid grid-cols-1 xl:grid-cols-2 gap-8 mb-8">
                <!-- User Growth Chart -->
                <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6">
                    <div class="flex items-center justify-between mb-6">
                        <h3 class="text-lg font-bold text-white">User Growth</h3>
                        <div class="flex space-x-2">
                            <button onclick="updateChart('monthly')" class="px-3 py-1 bg-purple-500/20 text-purple-400 rounded-lg text-sm hover:bg-purple-500/30 transition-all">Monthly</button>
                            <button onclick="updateChart('weekly')" class="px-3 py-1 bg-white/10 text-gray-400 rounded-lg text-sm hover:bg-white/20 transition-all">Weekly</button>
                        </div>
                    </div>
                    <div class="h-64">
                        <canvas id="userGrowthChart"></canvas>
                    </div>
                </div>

                <!-- User Activity Chart -->
                <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6">
                    <div class="flex items-center justify-between mb-6">
                        <h3 class="text-lg font-bold text-white">User Activity</h3>
                        <div class="flex space-x-2">
                            <button onclick="updateActivityChart('logins')" class="px-3 py-1 bg-teal-500/20 text-teal-400 rounded-lg text-sm hover:bg-teal-500/30 transition-all">Logins</button>
                            <button onclick="updateActivityChart('registrations')" class="px-3 py-1 bg-white/10 text-gray-400 rounded-lg text-sm hover:bg-white/20 transition-all">Registrations</button>
                        </div>
                    </div>
                    <div class="h-64">
                        <canvas id="userActivityChart"></canvas>
                    </div>
                </div>
            </div>

            <!-- System Overview -->
            <div class="grid grid-cols-1 lg:grid-cols-3 gap-8 mb-8">
                <!-- Recent Activity -->
                <div class="lg:col-span-2 bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6">
                    <h3 class="text-lg font-bold text-white mb-6">Recent Activity</h3>
                    <div class="space-y-4">
                        <div class="flex items-center space-x-4 p-4 bg-white/5 rounded-xl">
                            <div class="w-10 h-10 bg-green-500/20 rounded-full flex items-center justify-center">
                                <svg class="w-5 h-5 text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                                </svg>
                            </div>
                            <div class="flex-1">
                                <p class="text-white font-medium">New user registered</p>
                                <p class="text-gray-400 text-sm">john.doe@example.com joined the platform</p>
                            </div>
                            <span class="text-gray-400 text-sm">2 min ago</span>
                        </div>
                        
                        <div class="flex items-center space-x-4 p-4 bg-white/5 rounded-xl">
                            <div class="w-10 h-10 bg-blue-500/20 rounded-full flex items-center justify-center">
                                <svg class="w-5 h-5 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                </svg>
                            </div>
                            <div class="flex-1">
                                <p class="text-white font-medium">User profile updated</p>
                                <p class="text-gray-400 text-sm">jane.smith@example.com updated their profile</p>
                            </div>
                            <span class="text-gray-400 text-sm">15 min ago</span>
                        </div>
                        
                        <div class="flex items-center space-x-4 p-4 bg-white/5 rounded-xl">
                            <div class="w-10 h-10 bg-purple-500/20 rounded-full flex items-center justify-center">
                                <svg class="w-5 h-5 text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                            </div>
                            <div class="flex-1">
                                <p class="text-white font-medium">System backup completed</p>
                                <p class="text-gray-400 text-sm">Daily backup process finished successfully</p>
                            </div>
                            <span class="text-gray-400 text-sm">1 hour ago</span>
                        </div>
                    </div>
                </div>

                <!-- System Status -->
                <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6">
                    <h3 class="text-lg font-bold text-white mb-6">System Status</h3>
                    <div class="space-y-4">
                        <div class="flex items-center justify-between">
                            <div class="flex items-center space-x-3">
                                <div class="w-3 h-3 bg-green-400 rounded-full"></div>
                                <span class="text-white">Database</span>
                            </div>
                            <span class="text-green-400 text-sm">Online</span>
                        </div>
                        
                        <div class="flex items-center justify-between">
                            <div class="flex items-center space-x-3">
                                <div class="w-3 h-3 bg-green-400 rounded-full"></div>
                                <span class="text-white">API Server</span>
                            </div>
                            <span class="text-green-400 text-sm">Online</span>
                        </div>
                        
                        <div class="flex items-center justify-between">
                            <div class="flex items-center space-x-3">
                                <div class="w-3 h-3 bg-green-400 rounded-full"></div>
                                <span class="text-white">Email Service</span>
                            </div>
                            <span class="text-green-400 text-sm">Online</span>
                        </div>
                        
                        <div class="flex items-center justify-between">
                            <div class="flex items-center space-x-3">
                                <div class="w-3 h-3 bg-yellow-400 rounded-full"></div>
                                <span class="text-white">File Storage</span>
                            </div>
                            <span class="text-yellow-400 text-sm">Warning</span>
                        </div>
                    </div>
                    
                    <div class="mt-6 pt-6 border-t border-white/10">
                        <h4 class="text-white font-medium mb-3">Quick Actions</h4>
                        <div class="space-y-2">
                            <button class="w-full text-left px-3 py-2 bg-white/10 hover:bg-white/20 rounded-lg transition-all text-sm">
                                <span class="text-white">Run System Diagnostics</span>
                            </button>
                            <button class="w-full text-left px-3 py-2 bg-white/10 hover:bg-white/20 rounded-lg transition-all text-sm">
                                <span class="text-white">Clear Cache</span>
                            </button>
                            <button class="w-full text-left px-3 py-2 bg-white/10 hover:bg-white/20 rounded-lg transition-all text-sm">
                                <span class="text-white">Export User Data</span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
    </div>
</div>

<!-- Chart.js CDN -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    // Chart configurations
    let userGrowthChart, userActivityChart;

    // Initialize charts when page loads
    document.addEventListener('DOMContentLoaded', function() {
        initializeCharts();
    });

    function initializeCharts() {
        // User Growth Chart
        const growthCtx = document.getElementById('userGrowthChart').getContext('2d');
        userGrowthChart = new Chart(growthCtx, {
            type: 'line',
            data: {
                labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],
                datasets: [{
                    label: 'New Users',
                    data: [12, 19, 3, 5, 2, 3],
                    borderColor: 'rgb(168, 85, 247)',
                    backgroundColor: 'rgba(168, 85, 247, 0.1)',
                    borderWidth: 3,
                    fill: true,
                    tension: 0.4,
                    pointBackgroundColor: 'rgb(168, 85, 247)',
                    pointBorderColor: '#fff',
                    pointBorderWidth: 2,
                    pointRadius: 6
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    x: {
                        grid: {
                            color: 'rgba(255, 255, 255, 0.1)',
                            borderColor: 'rgba(255, 255, 255, 0.2)'
                        },
                        ticks: {
                            color: 'rgba(255, 255, 255, 0.7)'
                        }
                    },
                    y: {
                        grid: {
                            color: 'rgba(255, 255, 255, 0.1)',
                            borderColor: 'rgba(255, 255, 255, 0.2)'
                        },
                        ticks: {
                            color: 'rgba(255, 255, 255, 0.7)'
                        }
                    }
                }
            }
        });

        // User Activity Chart
        const activityCtx = document.getElementById('userActivityChart').getContext('2d');
        userActivityChart = new Chart(activityCtx, {
            type: 'bar',
            data: {
                labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],
                datasets: [{
                    label: 'Daily Logins',
                    data: [65, 59, 80, 81, 56, 55, 40],
                    backgroundColor: 'rgba(20, 184, 166, 0.8)',
                    borderColor: 'rgb(20, 184, 166)',
                    borderWidth: 1,
                    borderRadius: 8,
                    borderSkipped: false,
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    x: {
                        grid: {
                            color: 'rgba(255, 255, 255, 0.1)',
                            borderColor: 'rgba(255, 255, 255, 0.2)'
                        },
                        ticks: {
                            color: 'rgba(255, 255, 255, 0.7)'
                        }
                    },
                    y: {
                        grid: {
                            color: 'rgba(255, 255, 255, 0.1)',
                            borderColor: 'rgba(255, 255, 255, 0.2)'
                        },
                        ticks: {
                            color: 'rgba(255, 255, 255, 0.7)'
                        }
                    }
                }
            }
        });
    }

    // Update chart data based on selection
    function updateChart(period) {
        const buttons = document.querySelectorAll('[onclick*="updateChart"]');
        buttons.forEach(btn => {
            btn.classList.remove('bg-purple-500/20', 'text-purple-400');
            btn.classList.add('bg-white/10', 'text-gray-400');
        });
        
        event.target.classList.remove('bg-white/10', 'text-gray-400');
        event.target.classList.add('bg-purple-500/20', 'text-purple-400');

        if (period === 'monthly') {
            userGrowthChart.data.labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];
            userGrowthChart.data.datasets[0].data = [12, 19, 3, 5, 2, 3];
        } else {
            userGrowthChart.data.labels = ['Week 1', 'Week 2', 'Week 3', 'Week 4'];
            userGrowthChart.data.datasets[0].data = [8, 12, 6, 9];
        }
        userGrowthChart.update();
    }

    function updateActivityChart(type) {
        const buttons = document.querySelectorAll('[onclick*="updateActivityChart"]');
        buttons.forEach(btn => {
            btn.classList.remove('bg-teal-500/20', 'text-teal-400');
            btn.classList.add('bg-white/10', 'text-gray-400');
        });
        
        event.target.classList.remove('bg-white/10', 'text-gray-400');
        event.target.classList.add('bg-teal-500/20', 'text-teal-400');

        if (type === 'logins') {
            userActivityChart.data.labels = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];
            userActivityChart.data.datasets[0].data = [65, 59, 80, 81, 56, 55, 40];
            userActivityChart.data.datasets[0].label = 'Daily Logins';
        } else {
            userActivityChart.data.labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'];
            userActivityChart.data.datasets[0].data = [12, 19, 3, 5, 2, 3];
            userActivityChart.data.datasets[0].label = 'Monthly Registrations';
        }
        userActivityChart.update();
    }

    // Auto-refresh charts every 30 seconds
    setInterval(function() {
        // Simulate real-time data updates
        const randomData = userGrowthChart.data.datasets[0].data.map(() => 
            Math.floor(Math.random() * 20) + 1
        );
        userGrowthChart.data.datasets[0].data = randomData;
        userGrowthChart.update('none');
    }, 30000);
</script>
