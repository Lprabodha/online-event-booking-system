@model online_event_booking_system.Data.Entities.Booking
@{
    ViewData["Title"] = "Booking Confirmation";
}

<!-- Main Container with Consistent Background -->
<div class="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 relative overflow-hidden">
    <!-- Background Pattern -->
    <div class="absolute inset-0 bg-[url('data:image/svg+xml,%3Csvg width="60" height="60" viewBox="0 0 60 60" xmlns="http://www.w3.org/2000/svg"%3E%3Cg fill="none" fill-rule="evenodd"%3E%3Cg fill="%239C92AC" fill-opacity="0.05"%3E%3Ccircle cx="30" cy="30" r="2"/%3E%3C/g%3E%3C/g%3E%3C/svg%3E')] opacity-20"></div>
    
    <!-- Floating Elements -->
    <div class="absolute top-20 right-20 w-32 h-32 bg-gradient-to-r from-purple-500/20 to-pink-500/20 rounded-full blur-3xl animate-pulse"></div>
    <div class="absolute bottom-20 left-20 w-40 h-40 bg-gradient-to-r from-blue-500/20 to-cyan-500/20 rounded-full blur-3xl animate-pulse delay-1000"></div>
    
    <div class="relative z-10 container mx-auto px-4 py-8 sm:py-12">
        <div class="max-w-7xl mx-auto">
            
            <!-- Success Header with Consistent Styling -->
            <div class="text-center mb-12">
                <!-- Success Icon with Enhanced Animation -->
                <div class="relative inline-block mb-8">
                    <div class="w-24 h-24 sm:w-28 sm:h-28 bg-gradient-to-r from-green-400 to-emerald-500 rounded-full flex items-center justify-center mx-auto shadow-2xl animate-bounce">
                        <svg class="w-12 h-12 sm:w-14 sm:h-14 text-white" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                        </svg>
                    </div>
                    <!-- Enhanced Confetti Animation -->
                    <div class="absolute -top-3 -right-3 w-5 h-5 bg-yellow-400 rounded-full animate-ping"></div>
                    <div class="absolute -top-2 -left-2 w-4 h-4 bg-pink-400 rounded-full animate-ping delay-300"></div>
                    <div class="absolute -bottom-2 -right-2 w-3 h-3 bg-blue-400 rounded-full animate-ping delay-700"></div>
                    <div class="absolute -bottom-1 -left-1 w-2 h-2 bg-green-400 rounded-full animate-ping delay-1000"></div>
                </div>
                
                <h1 class="text-5xl sm:text-6xl md:text-7xl font-bold text-white mb-6 leading-tight">
                    Booking <span class="bg-gradient-to-r from-green-400 to-emerald-400 bg-clip-text text-transparent">Confirmed!</span>
                </h1>
                <p class="text-xl sm:text-2xl text-gray-300 max-w-3xl mx-auto leading-relaxed mb-4">
                    🎉 Your tickets have been successfully purchased and are ready to use!
                </p>
                <div class="w-24 h-1 bg-gradient-to-r from-green-400 to-emerald-400 mx-auto rounded-full"></div>
            </div>

            <!-- Main Content Grid with Consistent Spacing -->
            <div class="grid grid-cols-1 xl:grid-cols-3 gap-8 lg:gap-10">
                
                <!-- Left Column - Event Details & Tickets -->
                <div class="xl:col-span-2 space-y-8">
                    
                    <!-- Event Information Card with Enhanced Design -->
                    <div class="bg-white/10 backdrop-blur-lg rounded-3xl shadow-2xl p-8 sm:p-10 border border-white/20 hover:border-white/30 transition-all duration-300 group">
                        <div class="flex items-center mb-8">
                            <div class="w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-600 rounded-2xl flex items-center justify-center mr-6 shadow-lg">
                                <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"></path>
                                </svg>
                            </div>
                            <h2 class="text-3xl font-bold text-white">Event Details</h2>
                        </div>
                        
                        <div class="space-y-8">
                            <!-- Event Title & Description -->
                            <div>
                                <h3 class="text-4xl sm:text-5xl font-bold text-white mb-4 leading-tight">@Model.Event.Title</h3>
                                <p class="text-gray-300 text-lg leading-relaxed">@Model.Event.Description</p>
                            </div>
                            
                            <!-- Event Info Grid with Enhanced Cards -->
                            <div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
                                <div class="flex items-center space-x-6 p-6 bg-gradient-to-r from-green-500/20 to-emerald-500/20 rounded-2xl border border-green-500/30 hover:border-green-500/50 transition-all duration-300">
                                    <div class="w-14 h-14 bg-gradient-to-r from-green-500 to-emerald-500 rounded-xl flex items-center justify-center flex-shrink-0 shadow-lg">
                                        <svg class="w-7 h-7 text-white" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"></path>
                                        </svg>
                                    </div>
                                    <div>
                                        <p class="text-green-300 text-sm uppercase tracking-wide font-semibold mb-1">Date & Time</p>
                                        <p class="text-white font-bold text-lg">@Model.Event.EventDate.ToString("MMMM dd, yyyy") • @Model.Event.EventTime.ToString("HH:mm")</p>
                                    </div>
                                </div>
                                
                                <div class="flex items-center space-x-6 p-6 bg-gradient-to-r from-purple-500/20 to-pink-500/20 rounded-2xl border border-purple-500/30 hover:border-purple-500/50 transition-all duration-300">
                                    <div class="w-14 h-14 bg-gradient-to-r from-purple-500 to-pink-500 rounded-xl flex items-center justify-center flex-shrink-0 shadow-lg">
                                        <svg class="w-7 h-7 text-white" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"></path>
                                        </svg>
                                    </div>
                                    <div>
                                        <p class="text-purple-300 text-sm uppercase tracking-wide font-semibold mb-1">Venue</p>
                                        <p class="text-white font-bold text-lg">@Model.Event.Venue?.Name</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Tickets Section with Enhanced Design -->
                    <div class="bg-white/10 backdrop-blur-lg rounded-3xl shadow-2xl p-8 sm:p-10 border border-white/20 hover:border-white/30 transition-all duration-300 group">
                        <div class="flex items-center justify-between mb-8">
                            <div class="flex items-center">
                                <div class="w-16 h-16 bg-gradient-to-r from-orange-500 to-red-500 rounded-2xl flex items-center justify-center mr-6 shadow-lg">
                                    <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 20 20">
                                        <path fill-rule="evenodd" d="M4 4a2 2 0 00-2 2v4a2 2 0 002 2V6h10a2 2 0 00-2-2H4zm2 6a2 2 0 012-2h8a2 2 0 012 2v4a2 2 0 01-2 2H8a2 2 0 01-2-2v-4zm6 4a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"></path>
                                    </svg>
                                </div>
                                <h2 class="text-3xl font-bold text-white">Your Tickets</h2>
                            </div>
                            <span class="bg-gradient-to-r from-green-500 to-emerald-500 text-white px-6 py-3 rounded-full text-lg font-bold shadow-lg">
                                @(Model.Tickets?.Count ?? 0) ticket@((Model.Tickets?.Count ?? 0) != 1 ? "s" : "")
                            </span>
                        </div>
                        

                        @if (Model.Tickets != null && Model.Tickets.Any())
                        {
                            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                                @foreach (var ticket in Model.Tickets)
                                {
                                    <div class="bg-gradient-to-br from-white/20 to-white/5 backdrop-blur-sm rounded-2xl p-8 border border-white/30 hover:bg-white/25 transition-all duration-300 group shadow-xl">
                                        <div class="flex flex-col sm:flex-row sm:items-center justify-between mb-6">
                                            <div class="flex-1">
                                                <h3 class="text-2xl font-bold text-white mb-3">@(ticket.EventPrice?.Category ?? "General Admission")</h3>
                                                <p class="text-gray-300 text-base mb-3">@(ticket.EventPrice?.Description ?? "Standard ticket")</p>
                                                <div class="flex items-center gap-2 mb-3">
                                                    <p class="text-gray-400 text-sm font-mono bg-white/10 px-3 py-1 rounded-lg inline-block">#@ticket.TicketNumber</p>
                                                    @if (ticket.IsPaid)
                                                    {
                                                        <span class="bg-green-500/20 text-green-300 text-xs px-2 py-1 rounded-full border border-green-500/30">Paid</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="bg-yellow-500/20 text-yellow-300 text-xs px-2 py-1 rounded-full border border-yellow-500/30">Pending</span>
                                                    }
                                                </div>
                                            </div>
                                            <div class="text-right mt-4 sm:mt-0">
                                                <p class="text-4xl font-bold text-white">LKR @(ticket.EventPrice?.Price.ToString("F2") ?? "0.00")</p>
                                            </div>
                                        </div>
                                        
                                        <div class="border-t border-white/30 pt-6">
                                            <div class="text-center">
                                                <div class="bg-white rounded-2xl p-6 inline-block mb-4 group-hover:scale-105 transition-transform duration-300 shadow-2xl">
                                                    @if (!string.IsNullOrEmpty(ticket.QRCode))
                                                    {
                                                        <img src="@ticket.QRCode" alt="QR Code" class="w-36 h-36 sm:w-40 sm:h-40">
                                                    }
                                                    else
                                                    {
                                                        <div class="w-36 h-36 sm:w-40 sm:h-40 bg-gray-200 rounded-lg flex items-center justify-center">
                                                            <span class="text-gray-500 text-sm">QR Code</span>
                                                        </div>
                                                    }
                                                </div>
                                                <p class="text-gray-300 text-base font-medium">Scan at entrance</p>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-12">
                                <div class="w-20 h-20 bg-orange-500/20 rounded-full flex items-center justify-center mx-auto mb-4">
                                    <svg class="w-10 h-10 text-orange-400" fill="currentColor" viewBox="0 0 20 20">
                                        <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                                    </svg>
                                </div>
                                <h3 class="text-xl font-bold text-white mb-2">No Tickets Found</h3>
                                <p class="text-gray-400">Tickets are being processed. Please refresh the page in a few moments.</p>
                                <button onclick="window.location.reload()" class="mt-4 px-6 py-3 bg-gradient-to-r from-blue-500 to-purple-500 text-white rounded-xl font-semibold hover:from-blue-600 hover:to-purple-600 transition-all duration-300">
                                    Refresh Page
                                </button>
                            </div>
                        }
                    </div>
                </div>

                <!-- Right Column - Booking Info & Actions -->
                <div class="space-y-8">
                    
                    <!-- Booking Information Card with Enhanced Design -->
                    <div class="bg-white/10 backdrop-blur-lg rounded-3xl shadow-2xl p-8 sm:p-10 border border-white/20 hover:border-white/30 transition-all duration-300 group">
                        <div class="flex items-center mb-8">
                            <div class="w-16 h-16 bg-gradient-to-r from-indigo-500 to-blue-500 rounded-2xl flex items-center justify-center mr-6 shadow-lg">
                                <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M4 4a2 2 0 00-2 2v4a2 2 0 002 2V6h10a2 2 0 00-2-2H4zm2 6a2 2 0 012-2h8a2 2 0 012 2v4a2 2 0 01-2 2H8a2 2 0 01-2-2v-4zm6 4a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"></path>
                                </svg>
                            </div>
                            <h2 class="text-3xl font-bold text-white">Booking Info</h2>
                        </div>
                        
                        <div class="space-y-6">
                            <div class="p-6 bg-gradient-to-r from-blue-500/30 to-purple-500/30 rounded-2xl border border-blue-500/40 shadow-lg">
                                <label class="text-blue-300 text-sm uppercase tracking-wide font-semibold block mb-3">Booking Reference</label>
                                <p class="text-3xl font-bold text-white font-mono">@Model.BookingReference</p>
                            </div>
                            
                            <div class="p-6 bg-white/10 rounded-2xl border border-white/20 shadow-lg">
                                <label class="text-gray-400 text-sm uppercase tracking-wide font-semibold block mb-3">Customer</label>
                                <p class="text-white font-bold text-xl mb-1">@Model.Customer.FullName</p>
                                <p class="text-gray-300 text-base">@Model.Customer.Email</p>
                            </div>
                            
                            <div class="p-6 bg-white/10 rounded-2xl border border-white/20 shadow-lg">
                                <label class="text-gray-400 text-sm uppercase tracking-wide font-semibold block mb-3">Booking Date</label>
                                <p class="text-white font-bold text-lg">@Model.CreatedAt.ToString("MMM dd, yyyy")</p>
                                <p class="text-gray-300 text-base">@Model.CreatedAt.ToString("HH:mm")</p>
                            </div>
                            
                            <div class="p-6 bg-white/10 rounded-2xl border border-white/20 shadow-lg">
                                <label class="text-gray-400 text-sm uppercase tracking-wide font-semibold block mb-3">Status</label>
                                <span class="status-badge inline-flex items-center px-6 py-3 rounded-full text-lg font-bold bg-gradient-to-r from-green-500 to-emerald-500 text-white shadow-lg">
                                    @Model.Status
                                </span>
                            </div>
                        </div>
                    </div>

                    <!-- Action Buttons with Enhanced Design -->
                    <div class="bg-white/10 backdrop-blur-lg rounded-3xl shadow-2xl p-8 sm:p-10 border border-white/20 hover:border-white/30 transition-all duration-300 group">
                        <h3 class="text-2xl font-bold text-white mb-8">Quick Actions</h3>
                        <div class="space-y-6">
                            <a href="@Url.Action("Index", "Customer")" 
                               class="w-full flex items-center justify-center px-8 py-5 bg-gradient-to-r from-green-500 to-emerald-500 text-white rounded-2xl font-bold text-lg hover:from-green-600 hover:to-emerald-600 transition-all duration-300 group shadow-xl hover:shadow-2xl transform hover:scale-105">
                                <svg class="w-6 h-6 mr-4" fill="currentColor" viewBox="0 0 20 20">
                                    <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                                View All Bookings
                            </a>
                            
                            <button onclick="window.print()" 
                                    class="w-full flex items-center justify-center px-8 py-5 bg-gradient-to-r from-blue-500 to-purple-500 text-white rounded-2xl font-bold text-lg hover:from-blue-600 hover:to-purple-600 transition-all duration-300 group shadow-xl hover:shadow-2xl transform hover:scale-105">
                                <svg class="w-6 h-6 mr-4" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M5 4v3H4a2 2 0 00-2 2v3a2 2 0 002 2h1v2a2 2 0 002 2h6a2 2 0 002-2v-2h1a2 2 0 002-2V9a2 2 0 00-2-2h-1V4a2 2 0 00-2-2H7a2 2 0 00-2 2zm8 0H7v3h6V4zm0 8H7v4h6v-4z" clip-rule="evenodd"></path>
                                </svg>
                                Print Tickets
                            </button>
                            
                            <a href="@Url.Action("Details", "Events", new { id = Model.EventId })" 
                               class="w-full flex items-center justify-center px-8 py-5 bg-white/10 text-white rounded-2xl font-bold text-lg hover:bg-white/20 transition-all duration-300 border border-white/30 group shadow-xl hover:shadow-2xl transform hover:scale-105">
                                <svg class="w-6 h-6 mr-4" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-8.707l-3-3a1 1 0 00-1.414 0l-3 3a1 1 0 001.414 1.414L9 9.414V13a1 1 0 102 0V9.414l1.293 1.293a1 1 0 001.414-1.414z" clip-rule="evenodd"></path>
                                </svg>
                                Event Details
                            </a>
                        </div>
                    </div>

                    <!-- Important Information with Enhanced Design -->
                    <div class="bg-gradient-to-r from-amber-500/30 to-orange-500/30 backdrop-blur-lg rounded-3xl shadow-2xl p-8 sm:p-10 border border-amber-500/40">
                        <div class="flex items-center mb-6">
                            <div class="w-14 h-14 bg-gradient-to-r from-amber-500 to-orange-500 rounded-xl flex items-center justify-center mr-4 shadow-lg">
                                <svg class="w-7 h-7 text-white" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                                </svg>
                            </div>
                            <h3 class="text-2xl font-bold text-white">Important Notes</h3>
                        </div>
                        
                        <div class="space-y-4 text-base">
                            <div class="flex items-start space-x-4">
                                <svg class="w-5 h-5 text-amber-300 mt-1 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                                </svg>
                                <p class="text-white/95 font-medium">Bring valid ID and show QR code at entrance</p>
                            </div>
                            <div class="flex items-start space-x-4">
                                <svg class="w-5 h-5 text-amber-300 mt-1 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                                </svg>
                                <p class="text-white/95 font-medium">Tickets sent to your email address</p>
                            </div>
                            <div class="flex items-start space-x-4">
                                <svg class="w-5 h-5 text-amber-300 mt-1 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                                </svg>
                                <p class="text-white/95 font-medium">Arrive 30 minutes before event starts</p>
                            </div>
                            <div class="flex items-start space-x-4">
                                <svg class="w-5 h-5 text-amber-300 mt-1 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                                </svg>
                                <p class="text-white/95 font-medium">Keep this page as backup reference</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Print Styles -->
<style media="print">
    .fixed { position: static !important; }
    .bg-gradient-to-br, .bg-gradient-to-r { background: white !important; }
    .text-white { color: black !important; }
    .text-gray-300, .text-gray-400 { color: #666 !important; }
    .bg-white\/10, .bg-white\/20, .bg-white\/5 { background: #f8f9fa !important; }
    .backdrop-blur-lg, .backdrop-blur-sm { backdrop-filter: none !important; }
    .shadow-2xl, .shadow-lg, .shadow-xl { box-shadow: none !important; }
    .border { border: 1px solid #e5e7eb !important; }
    .animate-bounce, .animate-ping, .animate-pulse { animation: none !important; }
    .hover\:bg-white\/10:hover, .hover\:from-green-600:hover { background: #f8f9fa !important; }
    .group:hover .group-hover\:scale-105 { transform: none !important; }
    .hidden { display: none !important; }
    .bg-gradient-to-r.from-green-500.to-emerald-500 { background: #10b981 !important; }
    .bg-gradient-to-r.from-blue-500.to-purple-500 { background: #3b82f6 !important; }
    .transform { transform: none !important; }
</style>

@section Scripts {
    <script>
        // Print functionality
        function printTickets() {
            window.print();
        }

        // Check if payment has been processed by webhook (without reloading)
        function checkPaymentStatus() {
            const statusElement = document.querySelector('.status-badge');
            if (statusElement && statusElement.textContent.trim() === 'Pending') {
                // Show a subtle indicator that payment is being processed
                statusElement.innerHTML = '<span class="animate-pulse">Processing...</span>';
                
                // Simple status update without any API calls
                setTimeout(() => {
                    if (statusElement.textContent.includes('Processing')) {
                        statusElement.innerHTML = 'Confirmed';
                        statusElement.className = 'status-badge inline-flex items-center px-6 py-3 rounded-full text-lg font-bold bg-gradient-to-r from-green-500 to-emerald-500 text-white shadow-lg';
                    }
                }, 3000);
            }
        }

        // Add entrance animation
        document.addEventListener('DOMContentLoaded', function() {
            // Animate cards on load
            const cards = document.querySelectorAll('.bg-white\\/10');
            cards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(30px)';
                setTimeout(() => {
                    card.style.transition = 'all 0.8s ease-out';
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, index * 200);
            });

            // Check payment status
            checkPaymentStatus();
        });

        // Add smooth scrolling for better UX
        document.documentElement.style.scrollBehavior = 'smooth';
    </script>
}