@model online_event_booking_system.Data.Entities.Booking
@{
    ViewData["Title"] = "Booking Confirmation";
}

<div class="min-h-screen bg-gray-50">
            <!-- Success Header -->
    <div class="bg-white border-b border-gray-200">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <div class="text-center">
                <div class="mx-auto flex items-center justify-center h-16 w-16 rounded-full bg-green-100 mb-4">
                    <svg class="h-8 w-8 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                </div>
                <h1 class="text-3xl font-bold text-gray-900">Booking Confirmed!</h1>
                <p class="mt-2 text-lg text-gray-600">Your tickets are ready. Check your email for confirmation details.</p>
            </div>
        </div>
            </div>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <!-- Main Content -->
            <div class="lg:col-span-2 space-y-6">
                <!-- Event Card -->
                <div class="bg-white shadow-sm rounded-lg border border-gray-200 overflow-hidden">
                    <div class="p-6">
                        <div class="flex items-start justify-between">
                            <div class="flex-1">
                                <h2 class="text-2xl font-bold text-gray-900 mb-2">@Model.Event.Title</h2>
                                <div class="flex items-center text-sm text-gray-500 mb-4">
                                    <svg class="flex-shrink-0 mr-1.5 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                    </svg>
                                    @Model.Event.EventDate.ToString("MMMM dd, yyyy") at @Model.Event.EventTime.ToString("h:mm tt")
                                </div>
                                <div class="flex items-center text-sm text-gray-500">
                                    <svg class="flex-shrink-0 mr-1.5 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                    </svg>
                                    @(Model.Event.Venue?.Name ?? "Venue not specified"), @(Model.Event.Venue?.Location ?? "Location not specified")
                                </div>
                            </div>
                            <div class="ml-4">
                                <span class="status-badge inline-flex items-center px-3 py-1 rounded-full text-sm font-medium @(Model.Status == "Confirmed" ? "bg-green-100 text-green-800" : "bg-yellow-100 text-yellow-800")">
                                    @Model.Status
                                </span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Tickets Section -->
                <div class="bg-white shadow-sm rounded-lg border border-gray-200">
                    <div class="px-6 py-4 border-b border-gray-200">
                        <h3 class="text-lg font-semibold text-gray-900">Your Tickets (@(Model.Tickets?.Count ?? 0))</h3>
                    </div>
                    <div class="p-6">
                        @if (Model.Tickets != null && Model.Tickets.Any())
                        {
                            <div class="space-y-4">
                    @foreach (var ticket in Model.Tickets)
                    {
                                    <div class="border border-gray-200 rounded-lg p-4 hover:bg-gray-50 transition-colors">
                                        <div class="flex items-start gap-4">
                                            <div class="flex-shrink-0">
                                                @if (!string.IsNullOrEmpty(ticket.QRCode) && Model.Status == "Confirmed")
                                                {
                                                    <!-- QR Code from S3 - direct URL -->
                                                    <div class="relative">
                                                        @{
                                                            // Get QR code URL directly from the backend
                                                            var qrCodeUrl = ViewBag.QRCodeUrls != null && ViewBag.QRCodeUrls.ContainsKey(ticket.Id) 
                                                                ? ViewBag.QRCodeUrls[ticket.Id] 
                                                                : ticket.QRCode; // Fallback to direct path
                                                        }
                                                        <img src="@qrCodeUrl" alt="QR Code" class="w-32 h-32 rounded-md border shadow-lg" />
                                                        <a href="@qrCodeUrl" download="@($"ticket-{ticket.TicketNumber}.png")" 
                                                           class="absolute -bottom-2 -right-2 bg-blue-500 text-white p-2 rounded-full shadow-lg hover:bg-blue-600 transition-colors"
                                                           title="Download QR Code">
                                                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                                            </svg>
                                                        </a>
                                                    </div>
                                                }
                                                else if (Model.Status == "Confirmed")
                                                {
                                                    <div class="w-32 h-32 bg-yellow-100 rounded flex items-center justify-center border-2 border-yellow-300">
                                                        <div class="text-center">
                                                            <svg class="w-8 h-8 text-yellow-600 mx-auto mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                                                            </svg>
                                                            <p class="text-xs text-yellow-700">QR Code<br/>Generating...</p>
                                                        </div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="w-32 h-32 bg-gray-100 rounded flex items-center justify-center">
                                                        <div class="text-center">
                                                            <svg class="w-8 h-8 text-gray-400 mx-auto mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                                            </svg>
                                                            <p class="text-xs text-gray-500">QR Code<br/>After Payment</p>
                                                        </div>
                                                    </div>
                                                }
                                            </div>

                                            <div class="flex-1">
                                                <div class="flex items-center justify-between mb-2">
                                                    <h4 class="font-medium text-gray-900">@(ticket.EventPrice?.Category ?? "General Admission")</h4>
                                                    <span class="text-lg font-semibold text-gray-900">LKR @(ticket.EventPrice?.Price.ToString("F2") ?? "0.00")</span>
                                                </div>
                                                <p class="text-sm text-gray-500 mb-2">@(ticket.EventPrice?.Description ?? "Standard ticket")</p>
                                                <div class="flex items-center space-x-4 text-sm text-gray-500">
                                                    <span>Ticket #@ticket.TicketNumber</span>
                                                    <span>•</span>
                                                    <span>Qty: 1</span>
                                                    <span>•</span>
                                                    <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium @(Model.Status == "Confirmed" ? "bg-green-100 text-green-800" : "bg-yellow-100 text-yellow-800")">
                                                        @(Model.Status == "Confirmed" ? "Paid" : "Pending")
                                                    </span>
                                                </div>
                                            </div>
                                </div>
                                </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-8">
                                <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                                </svg>
                                <h3 class="mt-2 text-sm font-medium text-gray-900">No tickets found</h3>
                                <p class="mt-1 text-sm text-gray-500">There was an issue loading your tickets.</p>
                                <div class="mt-6">
                                    <button onclick="window.location.reload()" class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700">
                                        Refresh Page
                                    </button>
                                </div>
                            </div>
                        }
                        </div>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="space-y-6">
                <!-- Booking Summary -->
                <div class="bg-white shadow-sm rounded-lg border border-gray-200">
                    <div class="px-6 py-4 border-b border-gray-200">
                        <h3 class="text-lg font-semibold text-gray-900">Booking Summary</h3>
                    </div>
                    <div class="p-6 space-y-4">
                        <div class="flex justify-between">
                            <span class="text-sm text-gray-500">Booking ID</span>
                            <div class="flex items-center gap-3">
                                <span id="bookingIdText" class="text-sm font-medium text-gray-900">@Model.Id.ToString().Substring(0, 8).ToUpper()</span>
                                <button id="copyBookingId" class="text-sm px-3 py-1 bg-slate-100 rounded hover:bg-slate-200">Copy</button>
                            </div>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-sm text-gray-500">Booking Date</span>
                            <span class="text-sm font-medium text-gray-900">@Model.CreatedAt.ToString("MMM dd, yyyy")</span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-sm text-gray-500">Total Amount</span>
                            <span class="text-lg font-semibold text-gray-900">LKR @Model.Tickets.Sum(t => t.EventPrice?.Price ?? 0).ToString("F2")</span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-sm text-gray-500">Payment Status</span>
                            <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium @(Model.Status == "Confirmed" ? "bg-green-100 text-green-800" : "bg-yellow-100 text-yellow-800")">
                                @(Model.Status == "Confirmed" ? "Paid" : "Pending")
                            </span>
                        </div>
                    </div>
                </div>

                <!-- Important Notes -->
                <div class="bg-blue-50 border border-blue-200 rounded-lg p-4">
                    <div class="flex">
                        <div class="flex-shrink-0">
                            <svg class="h-5 w-5 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        </div>
                        <div class="ml-3">
                            <h3 class="text-sm font-medium text-blue-800">Important Information</h3>
                            <div class="mt-2 text-sm text-blue-700">
                                <ul class="list-disc list-inside space-y-1">
                                    <li>Bring a valid ID to the event</li>
                                    <li>Arrive 15 minutes before start time</li>
                                    <li>Show QR code at entrance</li>
                                    <li>No refunds after event starts</li>
                                </ul>
                            </div>
                    </div>
                </div>
            </div>

                <!-- Actions -->
                <div class="space-y-3">
                    <button onclick="window.print()" class="w-full inline-flex justify-center items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z"></path>
                        </svg>
                    Print Tickets
                </button>
                    <a href="/events" class="w-full inline-flex justify-center items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z"></path>
                        </svg>
                        Browse More Events
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const statusElement = document.querySelector('.status-badge');
        if (statusElement && statusElement.textContent.trim() === 'Processing') {
            setTimeout(function() {
                statusElement.textContent = 'Confirmed';
                statusElement.className = 'status-badge inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800';
            }, 3000);
        }

        // Copy booking id to clipboard
        const copyBtn = document.getElementById('copyBookingId');
        if (copyBtn) {
            copyBtn.addEventListener('click', function () {
                const bookingEl = document.getElementById('bookingIdText');
                if (!bookingEl) return;
                const text = bookingEl.textContent.trim();
                navigator.clipboard?.writeText(text).then(function() {
                    copyBtn.textContent = 'Copied';
                    setTimeout(() => copyBtn.textContent = 'Copy', 2000);
                }).catch(function() {
                    // fallback
                    alert('Press Ctrl+C to copy: ' + text);
                });
            });
        }

    });
    </script>