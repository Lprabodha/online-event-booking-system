@model online_event_booking_system.Data.Entities.ApplicationUser
@{
    ViewData["Title"] = "Profile";
    Layout = "_DashboardLayout";
}

<!-- Customer Profile Container -->
<div class="min-h-screen bg-dark-navy text-white pt-20">
    <!-- Main Content -->
    <div class="p-4 md:p-6 pt-8">
        <!-- Page Header -->
        <div class="mb-8">
            <h1 class="text-3xl font-bold bg-gradient-to-r from-purple-400 to-teal-400 text-transparent bg-clip-text mb-2">My Profile</h1>
            <p class="text-gray-400">Manage your personal information and account settings</p>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <!-- Profile Information -->
            <div class="lg:col-span-2">
                <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-8">
                    <h2 class="text-2xl font-bold mb-6">Personal Information</h2>
                    <form id="profileForm">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <label class="block text-sm font-medium text-gray-300 mb-2">Full Name</label>
                                <input type="text" id="fullName" value="@(Model.FullName ?? "")" class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-300 mb-2">Email Address</label>
                                <input type="email" value="@Model.Email" disabled class="w-full px-4 py-3 bg-white/5 border border-white/10 rounded-lg text-gray-400 cursor-not-allowed">
                                <p class="text-xs text-gray-500 mt-1">Email cannot be changed</p>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-300 mb-2">Contact Number</label>
                                <input type="tel" id="contactNumber" value="@(Model.ContactNumber ?? "")" class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-300 mb-2">NIC Number</label>
                                <input type="text" id="nic" value="@(Model.NIC ?? "")" class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent">
                            </div>
                        </div>
                        <div class="mt-6">
                            <label class="block text-sm font-medium text-gray-300 mb-2">Address</label>
                            <textarea id="address" rows="3" class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent resize-none">@(Model.Address ?? "")</textarea>
                        </div>
                        <div class="mt-8 flex justify-end space-x-4">
                            <button type="button" id="cancelBtn" class="px-6 py-3 bg-white/10 border border-white/20 text-white rounded-lg hover:bg-white/20 transition-all duration-200 font-medium">
                                Cancel
                            </button>
                            <button type="submit" id="saveBtn" class="px-6 py-3 bg-gradient-to-r from-purple-500 to-teal-500 text-white rounded-lg hover:from-purple-600 hover:to-teal-600 transition-all duration-200 font-medium">
                                Save Changes
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="space-y-6">
                <!-- Profile Picture -->
                <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6">
                    <h3 class="text-lg font-bold mb-4">Profile Picture</h3>
                    <div class="text-center">
                        <div class="w-24 h-24 bg-gradient-to-r from-purple-500 to-teal-500 rounded-full flex items-center justify-center mx-auto mb-4">
                            <span class="text-2xl font-bold text-white">@(!string.IsNullOrEmpty(Model.FullName) ? Model.FullName.Substring(0, 1).ToUpper() : "U")</span>
                        </div>
                        <p class="text-gray-400 text-sm">Profile picture coming soon</p>
                    </div>
                </div>

                <!-- Account Stats -->
                <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6">
                    <h3 class="text-lg font-bold mb-4">Account Stats</h3>
                    <div class="space-y-4">
                        <div class="flex justify-between">
                            <span class="text-gray-400">Member Since</span>
                            <span class="text-white font-semibold">Recently</span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-gray-400">Last Login</span>
                            <span class="text-white font-semibold">@(Model.LastLogin?.ToString("MMM dd, yyyy") ?? "Never")</span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-gray-400">Account Status</span>
                            <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium @(Model.IsActive ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800")">
                                @(Model.IsActive ? "Active" : "Inactive")
                            </span>
                        </div>
                    </div>
                </div>

                <!-- Security Settings -->
                <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6">
                    <h3 class="text-lg font-bold mb-4">Security</h3>
                    <form id="changePasswordForm">
                        <div class="space-y-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-300 mb-2">Current Password</label>
                                <input type="password" id="currentPassword" class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-300 mb-2">New Password</label>
                                <input type="password" id="newPassword" class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-300 mb-2">Confirm New Password</label>
                                <input type="password" id="confirmPassword" class="w-full px-4 py-3 bg-white/10 border border-white/20 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent">
                            </div>
                            <button type="submit" id="changePasswordBtn" class="w-full px-4 py-3 bg-gradient-to-r from-purple-500 to-teal-500 text-white rounded-lg hover:from-purple-600 hover:to-teal-600 transition-all duration-200 font-medium">Change Password</button>
                        </div>
                    </form>
                </div>

                <!-- Quick Actions -->
                <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6">
                    <h3 class="text-lg font-bold mb-4">Quick Actions</h3>
                    <div class="space-y-3">
                        <a asp-controller="Customer" asp-action="Bookings" class="w-full inline-flex items-center px-4 py-2 bg-white/10 border border-white/20 text-white rounded-lg hover:bg-white/20 transition-all duration-200 font-medium text-sm">
                            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z"></path>
                            </svg>
                            My Bookings
                        </a>
                        <a asp-controller="Customer" asp-action="Loyalty" class="w-full inline-flex items-center px-4 py-2 bg-white/10 border border-white/20 text-white rounded-lg hover:bg-white/20 transition-all duration-200 font-medium text-sm">
                            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"></path>
                            </svg>
                            Loyalty Points
                        </a>
                        <a asp-controller="Customer" asp-action="Support" class="w-full inline-flex items-center px-4 py-2 bg-white/10 border border-white/20 text-white rounded-lg hover:bg-white/20 transition-all duration-200 font-medium text-sm">
                            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"></path>
                            </svg>
                            Get Support
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('profileForm');
        const saveBtn = document.getElementById('saveBtn');
        const cancelBtn = document.getElementById('cancelBtn');
        const changePasswordForm = document.getElementById('changePasswordForm');
        const changePasswordBtn = document.getElementById('changePasswordBtn');
        
        // Store original values
        const originalValues = {
            fullName: document.getElementById('fullName').value,
            contactNumber: document.getElementById('contactNumber').value,
            nic: document.getElementById('nic').value,
            address: document.getElementById('address').value
        };

        // Reset form to original values
        cancelBtn.addEventListener('click', function() {
            document.getElementById('fullName').value = originalValues.fullName;
            document.getElementById('contactNumber').value = originalValues.contactNumber;
            document.getElementById('nic').value = originalValues.nic;
            document.getElementById('address').value = originalValues.address;
        });

        // Handle form submission
        form.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = {
                FullName: document.getElementById('fullName').value,
                ContactNumber: document.getElementById('contactNumber').value,
                NIC: document.getElementById('nic').value,
                Address: document.getElementById('address').value
            };

            // Show loading state
            saveBtn.disabled = true;
            saveBtn.innerHTML = '<svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>Saving...';

            try {
                const response = await fetch('/customer/profile', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify(formData)
                });

                const result = await response.json();
                
                if (result.success) {
                    // Show success message
                    showNotification('Profile updated successfully!', 'success');
                    
                    // Update original values
                    Object.assign(originalValues, formData);
                } else {
                    showNotification(result.message || 'Failed to update profile', 'error');
                }
            } catch (error) {
                console.error('Error updating profile:', error);
                showNotification('An error occurred while updating profile', 'error');
            } finally {
                // Reset button state
                saveBtn.disabled = false;
                saveBtn.innerHTML = 'Save Changes';
            }
        });

        // Change password submit
        changePasswordForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            const payload = {
                CurrentPassword: document.getElementById('currentPassword').value,
                NewPassword: document.getElementById('newPassword').value,
                ConfirmPassword: document.getElementById('confirmPassword').value
            };
            changePasswordBtn.disabled = true;
            const originalText = changePasswordBtn.innerHTML;
            changePasswordBtn.innerHTML = 'Changing...';
            try {
                const response = await fetch('/customer/change-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify(payload)
                });
                const result = await response.json();
                if (result.success) {
                    showNotification('Password changed successfully!', 'success');
                    changePasswordForm.reset();
                } else {
                    showNotification(result.message || 'Failed to change password', 'error');
                }
            } catch (err) {
                console.error(err);
                showNotification('Error changing password', 'error');
            } finally {
                changePasswordBtn.disabled = false;
                changePasswordBtn.innerHTML = originalText;
            }
        });

        // Show notification function
        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 z-50 px-6 py-3 rounded-lg text-white font-medium ${
                type === 'success' ? 'bg-green-500' : 'bg-red-500'
            }`;
            notification.textContent = message;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.remove();
            }, 3000);
        }
    });
</script>