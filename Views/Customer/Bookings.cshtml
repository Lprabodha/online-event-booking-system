@model List<online_event_booking_system.Data.Entities.Booking>
@{
    ViewData["Title"] = "My Bookings";
    Layout = "_DashboardLayout";
}

@Html.AntiForgeryToken()

<!-- Customer My Bookings Container -->
<div class="min-h-screen bg-dark-navy text-white pt-20">
    <!-- Main Content -->
    <div class="p-4 md:p-6 pt-8">
            <!-- Page Header -->
            <div class="mb-8">
                <h1 class="text-3xl font-bold bg-gradient-to-r from-purple-400 to-teal-400 text-transparent bg-clip-text mb-2">My Bookings</h1>
                <p class="text-gray-400">Manage your event bookings and view order details</p>
            </div>

            <!-- Booking Status Tabs -->
            <div class="mb-8">
                <div class="flex space-x-1 bg-white/5 backdrop-blur-xl border border-white/10 rounded-xl p-1">
                    <button onclick="filterBookings('all')" class="booking-filter px-6 py-3 rounded-lg font-medium transition-all duration-200 bg-gradient-to-r from-purple-500 to-teal-500 text-white">
                        All Bookings
                    </button>
                    <button onclick="filterBookings('pending')" class="booking-filter px-6 py-3 rounded-lg font-medium transition-all duration-200 text-gray-300 hover:text-white hover:bg-white/10">
                        Pending
                    </button>
                    <button onclick="filterBookings('confirmed')" class="booking-filter px-6 py-3 rounded-lg font-medium transition-all duration-200 text-gray-300 hover:text-white hover:bg-white/10">
                        Confirmed
                    </button>
                    <button onclick="filterBookings('cancelled')" class="booking-filter px-6 py-3 rounded-lg font-medium transition-all duration-200 text-gray-300 hover:text-white hover:bg-white/10">
                        Cancelled
                    </button>
                </div>
            </div>

            <!-- Bookings List -->
            <div class="space-y-6">
                @if (Model != null && Model.Any())
                {
                    @foreach (var booking in Model)
                    {
                        <div class="booking-item bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-4 lg:p-6" data-status="@booking.Status.ToLower()">
                            <!-- Header Section -->
                            <div class="flex flex-col sm:flex-row sm:items-start sm:justify-between mb-4">
                                <div class="flex-1 mb-4 sm:mb-0">
                                    <h3 class="text-lg lg:text-xl font-bold text-white mb-2">@booking.Event.Title</h3>
                                    <p class="text-gray-400 text-sm mb-1">Booking Reference: <span class="text-white font-mono">@booking.BookingReference</span></p>
                                    <p class="text-gray-400 text-sm">Event Date: <span class="text-white">@booking.Event.EventDate.ToString("MMMM dd, yyyy")</span></p>
                                </div>
                                <div class="flex items-center justify-between sm:flex-col sm:items-end">
                                    <span class="px-3 py-1 @(booking.Status == "Confirmed" ? "bg-green-500/20 text-green-400" : booking.Status == "Pending" ? "bg-yellow-500/20 text-yellow-400" : "bg-red-500/20 text-red-400") rounded-full text-sm font-medium">@booking.Status</span>
                                    <p class="text-xl lg:text-2xl font-bold text-white ml-4 sm:ml-0 sm:mt-2 @(booking.Status == "Cancelled" ? "line-through" : "")">LKR @booking.Tickets.Sum(t => t.EventPrice?.Price ?? 0).ToString("F2")</p>
                                </div>
                            </div>
                            
                            <!-- Details Grid -->
                            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 mb-4">
                                <div class="bg-white/5 border border-white/10 rounded-lg p-3">
                                    <p class="text-gray-400 text-xs mb-1">Order Date</p>
                                    <p class="text-white font-semibold text-sm">@booking.CreatedAt.ToString("MMM dd, yyyy")</p>
                                </div>
                                <div class="bg-white/5 border border-white/10 rounded-lg p-3">
                                    <p class="text-gray-400 text-xs mb-1">Tickets</p>
                                    <p class="text-white font-semibold text-sm">@booking.Tickets.Count ticket@(booking.Tickets.Count != 1 ? "s" : "")</p>
                                </div>
                                <div class="bg-white/5 border border-white/10 rounded-lg p-3 sm:col-span-2 lg:col-span-1">
                                    <p class="text-gray-400 text-xs mb-1">Venue</p>
                                    <p class="text-white font-semibold text-sm">@(booking.Event.Venue?.Name ?? "Venue not specified")</p>
                                </div>
                            </div>
                            
                            @if (booking.Status == "Cancelled")
                            {
                                <!-- Refund Status -->
                                <div class="bg-red-500/10 border border-red-500/20 rounded-lg p-3 mb-4">
                                    <p class="text-red-400 text-sm">
                                        <strong>Refund Status:</strong> Refund processed. Amount will be credited to your original payment method within 3-5 business days.
                                    </p>
                                </div>
                            }
                            
                            <!-- Action Buttons -->
                            <div class="flex flex-col sm:flex-row gap-3">
                                <a asp-controller="Customer" asp-action="OrderDetails" asp-route-id="@booking.Id" class="px-4 py-2 bg-blue-500/20 border border-blue-500/30 text-blue-400 rounded-lg hover:bg-blue-500/30 transition-all duration-200 font-medium text-sm text-center">
                                    View Details
                                </a>
                                @if (booking.Status == "Confirmed")
                                {
                                    <a href="@Url.Action("DownloadTickets", "Customer", new { id = booking.Id })" class="px-4 py-2 bg-white/10 border border-white/20 text-white rounded-lg hover:bg-white/20 transition-all duration-200 font-medium text-sm text-center">
                                        Download Ticket (PDF)
                                    </a>
                                }
                                else if (booking.Status == "Pending")
                                {
                                    <button onclick="cancelBooking('@booking.Id')" class="px-4 py-2 bg-red-500/20 border border-red-500/30 text-red-400 rounded-lg hover:bg-red-500/30 transition-all duration-200 font-medium text-sm">
                                        Cancel Booking
                                    </button>
                                }
                            </div>
                        </div>
                    }
                }
                else
                {
                    <!-- Empty State -->
                    <div class="text-center py-12">
                        <svg class="w-24 h-24 text-gray-600 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z"></path>
                        </svg>
                        <h3 class="text-xl font-bold text-white mb-2">No bookings found</h3>
                        <p class="text-gray-400 mb-6">You don't have any bookings yet.</p>
                        <a asp-controller="Customer" asp-action="Events" class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-purple-500 to-teal-500 text-white rounded-xl font-semibold hover:from-purple-600 hover:to-teal-600 transition-all">
                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                            </svg>
                            Browse Events
                        </a>
                    </div>
                }
            </div>

            <!-- Empty State (hidden by default) -->
            <div id="empty-state" class="hidden text-center py-12">
                <svg class="w-24 h-24 text-gray-600 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z"></path>
                </svg>
                <h3 class="text-xl font-bold text-white mb-2">No bookings found</h3>
                <p class="text-gray-400 mb-6">You don't have any bookings in this category yet.</p>
                <a asp-controller="Customer" asp-action="Events" class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-purple-500 to-teal-500 text-white rounded-xl font-semibold hover:from-purple-600 hover:to-teal-600 transition-all">
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                    </svg>
                    Browse Events
                </a>
            </div>
    </div>

    <script>
        // Booking filter functionality
        function filterBookings(status) {
            const bookingItems = document.querySelectorAll('.booking-item');
            const filterButtons = document.querySelectorAll('.booking-filter');
            const emptyState = document.getElementById('empty-state');
            let visibleCount = 0;

            // Update filter button styles
            filterButtons.forEach(btn => {
                btn.classList.remove('bg-gradient-to-r', 'from-purple-500', 'to-teal-500', 'text-white');
                btn.classList.add('text-gray-300', 'hover:text-white', 'hover:bg-white/10');
            });

            // Highlight active filter
            event.target.classList.remove('text-gray-300', 'hover:text-white', 'hover:bg-white/10');
            event.target.classList.add('bg-gradient-to-r', 'from-purple-500', 'to-teal-500', 'text-white');

            // Filter bookings
            bookingItems.forEach(item => {
                const itemStatus = item.getAttribute('data-status');
                if (status === 'all' || itemStatus === status) {
                    item.style.display = 'block';
                    visibleCount++;
                } else {
                    item.style.display = 'none';
                }
            });

            // Show/hide empty state
            if (visibleCount === 0) {
                emptyState.classList.remove('hidden');
            } else {
                emptyState.classList.add('hidden');
            }
        }

        // Cancel booking functionality
        async function cancelBooking(bookingId) {
            if (!confirm('Are you sure you want to cancel this booking? This action cannot be undone.')) {
                return;
            }

            try {
                const response = await fetch(`/customer/booking/${bookingId}/cancel`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                });

                const result = await response.json();
                
                if (result.success) {
                    // Reload the page to show updated status
                    window.location.reload();
                } else {
                    alert('Failed to cancel booking: ' + result.message);
                }
            } catch (error) {
                console.error('Error cancelling booking:', error);
                alert('An error occurred while cancelling the booking. Please try again.');
            }
        }
    </script>
</div>
