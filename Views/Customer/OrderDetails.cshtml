@model online_event_booking_system.Data.Entities.Booking
@{
    ViewData["Title"] = "Order Details";
    Layout = "_DashboardLayout";
}

<!-- Customer Order Details Container -->
<div class="min-h-screen bg-dark-navy text-white pt-20">
    <!-- Main Content -->
    <div class="p-4 md:p-6 pt-8">
        <!-- Page Header -->
        <div class="mb-8">
            <div class="flex items-center justify-between mb-4">
                <div>
                    <h1 class="text-3xl font-bold bg-gradient-to-r from-purple-400 to-teal-400 text-transparent bg-clip-text mb-2">Order Details</h1>
                    <p class="text-gray-400">Booking Reference: @Model.BookingReference</p>
                </div>
                <div class="flex items-center space-x-3">
                    <span class="px-4 py-2 @(Model.Status == "Confirmed" ? "bg-green-500/20 text-green-400 border-green-500/30" : Model.Status == "Pending" ? "bg-yellow-500/20 text-yellow-400 border-yellow-500/30" : "bg-red-500/20 text-red-400 border-red-500/30") border rounded-full text-sm font-medium">
                        @Model.Status
                    </span>
                    <a asp-controller="Customer" asp-action="Bookings" class="px-4 py-2 bg-white/10 border border-white/20 text-white rounded-lg hover:bg-white/20 transition-all duration-200 font-medium text-sm">
                        ← Back to Bookings
                    </a>
                </div>
            </div>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <!-- Main Content -->
            <div class="lg:col-span-2 space-y-6">
                <!-- Event Information -->
                <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6">
                    <h2 class="text-xl font-bold mb-4">Event Information</h2>
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div>
                            <h3 class="text-2xl font-bold text-white mb-2">@Model.Event.Title</h3>
                            <p class="text-gray-300 mb-4">@Model.Event.Description</p>
                            <div class="space-y-2">
                                <div class="flex items-center text-sm">
                                    <svg class="w-4 h-4 mr-2 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                    </svg>
                                    <span class="text-gray-400">Date:</span>
                                    <span class="text-white ml-2">@Model.Event.EventDate.ToString("MMMM dd, yyyy")</span>
                                </div>
                                <div class="flex items-center text-sm">
                                    <svg class="w-4 h-4 mr-2 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                    </svg>
                                    <span class="text-gray-400">Time:</span>
                                    <span class="text-white ml-2">@Model.Event.EventDate.ToString("h:mm tt") - @Model.Event.EndDate.ToString("h:mm tt")</span>
                                </div>
                                <div class="flex items-center text-sm">
                                    <svg class="w-4 h-4 mr-2 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                    </svg>
                                    <span class="text-gray-400">Venue:</span>
                                    <span class="text-white ml-2">@Model.Event.Venue.Name</span>
                                </div>
                                <div class="flex items-center text-sm">
                                    <svg class="w-4 h-4 mr-2 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                    </svg>
                                    <span class="text-gray-400">Address:</span>
                                    <span class="text-white ml-2">@Model.Event.Venue.Address</span>
                                </div>
                            </div>
                        </div>
                        <div class="bg-white/5 border border-white/10 rounded-lg p-4">
                            <h4 class="font-semibold text-white mb-3">Event Image</h4>
                            <div class="h-48 bg-gradient-to-br from-purple-500/20 to-teal-500/20 rounded-lg flex items-center justify-center">
                                <svg class="w-16 h-16 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                </svg>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Tickets -->
                <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6">
                    <h2 class="text-xl font-bold mb-4">Your Tickets (@Model.Tickets.Count)</h2>
                    <div class="space-y-4">
                        @foreach (var ticket in Model.Tickets)
                        {
                            <div class="bg-white/5 border border-white/10 rounded-lg p-4">
                                <div class="flex items-center justify-between">
                                    <div class="flex-1">
                                        <div class="flex items-center justify-between mb-2">
                                            <h4 class="font-semibold text-white">@(ticket.EventPrice?.Category ?? "General Admission")</h4>
                                            <span class="text-lg font-bold text-white">LKR @(ticket.EventPrice?.Price.ToString("F2") ?? "0.00")</span>
                                        </div>
                                        <p class="text-gray-400 text-sm mb-2">@(ticket.EventPrice?.Description ?? "Standard ticket")</p>
                                        <div class="flex items-center space-x-4 text-sm text-gray-500">
                                            <span>Ticket #@ticket.TicketNumber</span>
                                            <span>•</span>
                                            <span>Qty: @ticket.Quantity</span>
                                            <span>•</span>
                                            <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium @(Model.Status == "Confirmed" ? "bg-green-100 text-green-800" : "bg-yellow-100 text-yellow-800")">
                                                @(Model.Status == "Confirmed" ? "Paid" : "Pending")
                                            </span>
                                        </div>
                                    </div>
                                    @if (!string.IsNullOrEmpty(ticket.QRCode))
                                    {
                                        <div class="ml-4">
                                            <img src="data:image/png;base64,@ticket.QRCode" alt="QR Code" class="w-20 h-20" />
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="ml-4 w-20 h-20 bg-gray-100 rounded flex items-center justify-center">
                                            <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v1m6 11h2m-6 0h-2v4m0-4v4m-6-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                            </svg>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="space-y-6">
                <!-- Booking Summary -->
                <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6">
                    <h3 class="text-lg font-bold mb-4">Booking Summary</h3>
                    <div class="space-y-3">
                        <div class="flex justify-between">
                            <span class="text-gray-400">Booking ID</span>
                            <span class="text-white font-mono text-sm">@Model.Id.ToString().Substring(0, 8).ToUpper()</span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-gray-400">Booking Date</span>
                            <span class="text-white">@Model.BookingDate.ToString("MMM dd, yyyy")</span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-gray-400">Total Amount</span>
                            <span class="text-xl font-bold text-white">LKR @Model.TotalAmount.ToString("F2")</span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-gray-400">Payment Status</span>
                            <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium @(Model.Status == "Confirmed" ? "bg-green-100 text-green-800" : "bg-yellow-100 text-yellow-800")">
                                @(Model.Status == "Confirmed" ? "Paid" : "Pending")
                            </span>
                        </div>
                    </div>
                </div>

                <!-- Actions -->
                <div class="bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl p-6">
                    <h3 class="text-lg font-bold mb-4">Actions</h3>
                    <div class="space-y-3">
                        @if (Model.Status == "Confirmed")
                        {
                            <button onclick="window.print()" class="w-full px-4 py-2 bg-blue-500/20 border border-blue-500/30 text-blue-400 rounded-lg hover:bg-blue-500/30 transition-all duration-200 font-medium text-sm">
                                <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z"></path>
                                </svg>
                                Print Tickets
                            </button>
                        }
                        else if (Model.Status == "Pending")
                        {
                            <button onclick="cancelBooking('@Model.Id')" class="w-full px-4 py-2 bg-red-500/20 border border-red-500/30 text-red-400 rounded-lg hover:bg-red-500/30 transition-all duration-200 font-medium text-sm">
                                <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                </svg>
                                Cancel Booking
                            </button>
                        }
                        
                        <a asp-controller="Customer" asp-action="Bookings" class="w-full inline-flex justify-center items-center px-4 py-2 bg-white/10 border border-white/20 text-white rounded-lg hover:bg-white/20 transition-all duration-200 font-medium text-sm">
                            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z"></path>
                            </svg>
                            Back to Bookings
                        </a>
                    </div>
                </div>

                <!-- Important Information -->
                <div class="bg-blue-500/10 border border-blue-500/20 rounded-2xl p-6">
                    <h3 class="text-lg font-bold text-blue-400 mb-4">Important Information</h3>
                    <div class="space-y-3 text-sm text-blue-300">
                        <div class="flex items-start">
                            <svg class="w-4 h-4 mr-2 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            <span>Bring a valid ID to the event</span>
                        </div>
                        <div class="flex items-start">
                            <svg class="w-4 h-4 mr-2 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            <span>Arrive 15 minutes before start time</span>
                        </div>
                        <div class="flex items-start">
                            <svg class="w-4 h-4 mr-2 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            <span>Show QR code at entrance</span>
                        </div>
                        <div class="flex items-start">
                            <svg class="w-4 h-4 mr-2 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            <span>No refunds after event starts</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Cancel booking functionality
    async function cancelBooking(bookingId) {
        if (!confirm('Are you sure you want to cancel this booking? This action cannot be undone.')) {
            return;
        }

        try {
            const response = await fetch(`/customer/booking/${bookingId}/cancel`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            });

            const result = await response.json();
            
            if (result.success) {
                // Reload the page to show updated status
                window.location.reload();
            } else {
                alert('Failed to cancel booking: ' + result.message);
            }
        } catch (error) {
            console.error('Error cancelling booking:', error);
            alert('An error occurred while cancelling the booking. Please try again.');
        }
    }
</script>